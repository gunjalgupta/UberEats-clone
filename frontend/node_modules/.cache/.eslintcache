[{"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/index.js":"1","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/App.js":"2","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/Center.js":"3","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/Header.js":"4","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/Footer.js":"5","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Favourite.js":"6","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Register.js":"7","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Login.js":"8","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Home.js":"9","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/UpdateProfile.js":"10","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Home.js":"11","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Register.js":"12","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Login.js":"13","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/userSlice.js":"14","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/dish/Editdish.js":"15","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/UpdateProfile.js":"16","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Resprofile.js":"17","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/dish/Adddish.js":"18","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/CenterBox.js":"19","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/userSlice.js":"20","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Profilepic.js":"21","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Showprofile.js":"22","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Showprofile.js":"23","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/dish/Profilepic.js":"24","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/dish/Showprofile.js":"25","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Sidebar.js":"26","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Restaurants.js":"27","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Dishes.js":"28","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Restaurantpic.js":"29","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Profilepic.js":"30","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Resdishes.js":"31","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Checkout.js":"32","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Pastorders.js":"33","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/features/userReducer.js":"34","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/features/restaurantReducer.js":"35","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/globalStore/reducer.js":"36","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/actions/userActions.js":"37","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/actions/resActions.js":"38","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/AllOrders.js":"39","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Cusprofile.js":"40","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/index.js":"41","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/App.js":"42","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/globalStore/reducer.js":"43","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/Header.js":"44","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/Center.js":"45","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/Footer.js":"46","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Register.js":"47","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Login.js":"48","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/UpdateProfile.js":"49","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Login.js":"50","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/AllOrders.js":"51","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/UpdateProfile.js":"52","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Cusprofile.js":"53","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Register.js":"54","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Checkout.js":"55","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Favourite.js":"56","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Pastorders.js":"57","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Home.js":"58","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Home.js":"59","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Resprofile.js":"60","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/dish/Adddish.js":"61","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/dish/Editdish.js":"62","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/features/userReducer.js":"63","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/features/restaurantReducer.js":"64","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/CenterBox.js":"65","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Showprofile.js":"66","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Profilepic.js":"67","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Sidebar.js":"68","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/dish/Showprofile.js":"69","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Dishes.js":"70","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/dish/Profilepic.js":"71","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Restaurantpic.js":"72","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/actions/resActions.js":"73","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/actions/userActions.js":"74","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Resdishes.js":"75","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Restaurants.js":"76","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Profilepic.js":"77","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Showprofile.js":"78"},{"size":587,"mtime":1632726065260,"results":"79","hashOfConfig":"80"},{"size":2588,"mtime":1633520280116,"results":"81","hashOfConfig":"80"},{"size":4039,"mtime":1633846667453,"results":"82","hashOfConfig":"80"},{"size":2696,"mtime":1632730512267,"results":"83","hashOfConfig":"80"},{"size":2737,"mtime":1631841618803,"results":"84","hashOfConfig":"80"},{"size":3921,"mtime":1633907152163,"results":"85","hashOfConfig":"80"},{"size":2895,"mtime":1633880507741,"results":"86","hashOfConfig":"80"},{"size":3042,"mtime":1633891757990,"results":"87","hashOfConfig":"80"},{"size":19301,"mtime":1633907226153,"results":"88","hashOfConfig":"80"},{"size":14624,"mtime":1633907305216,"results":"89","hashOfConfig":"80"},{"size":10566,"mtime":1633907486607,"results":"90","hashOfConfig":"80"},{"size":2912,"mtime":1633880756829,"results":"91","hashOfConfig":"80"},{"size":2887,"mtime":1633891761094,"results":"92","hashOfConfig":"80"},{"size":478,"mtime":1631857700855,"results":"93","hashOfConfig":"80"},{"size":13529,"mtime":1633907412856,"results":"94","hashOfConfig":"80"},{"size":16941,"mtime":1633907562222,"results":"95","hashOfConfig":"80"},{"size":10310,"mtime":1633907532060,"results":"96","hashOfConfig":"80"},{"size":11576,"mtime":1633907377697,"results":"97","hashOfConfig":"80"},{"size":340,"mtime":1631840390443,"results":"98","hashOfConfig":"80"},{"size":478,"mtime":1632012213570,"results":"99","hashOfConfig":"80"},{"size":1415,"mtime":1633916204984,"results":"100","hashOfConfig":"80"},{"size":1030,"mtime":1633907286774,"results":"101","hashOfConfig":"80"},{"size":1059,"mtime":1633909979563,"results":"102","hashOfConfig":"80"},{"size":1274,"mtime":1633880613771,"results":"103","hashOfConfig":"80"},{"size":944,"mtime":1633907426076,"results":"104","hashOfConfig":"80"},{"size":4710,"mtime":1633907104997,"results":"105","hashOfConfig":"80"},{"size":4244,"mtime":1633907087987,"results":"106","hashOfConfig":"80"},{"size":12469,"mtime":1633907026577,"results":"107","hashOfConfig":"80"},{"size":799,"mtime":1633880302589,"results":"108","hashOfConfig":"80"},{"size":1406,"mtime":1633880747843,"results":"109","hashOfConfig":"80"},{"size":1819,"mtime":1633907075937,"results":"110","hashOfConfig":"80"},{"size":12270,"mtime":1633907138147,"results":"111","hashOfConfig":"80"},{"size":9960,"mtime":1633926257675,"results":"112","hashOfConfig":"80"},{"size":537,"mtime":1633159501976,"results":"113","hashOfConfig":"80"},{"size":596,"mtime":1633159466368,"results":"114","hashOfConfig":"80"},{"size":788,"mtime":1632726369382,"results":"115","hashOfConfig":"80"},{"size":259,"mtime":1633159672341,"results":"116","hashOfConfig":"80"},{"size":323,"mtime":1633159928665,"results":"117","hashOfConfig":"80"},{"size":9924,"mtime":1633924694182,"results":"118","hashOfConfig":"80"},{"size":4066,"mtime":1633907447252,"results":"119","hashOfConfig":"80"},{"size":587,"mtime":1632726065260,"results":"120","hashOfConfig":"121"},{"size":2588,"mtime":1634946226288,"results":"122","hashOfConfig":"121"},{"size":788,"mtime":1632726369382,"results":"123","hashOfConfig":"121"},{"size":2696,"mtime":1632730512267,"results":"124","hashOfConfig":"121"},{"size":4039,"mtime":1633846667453,"results":"125","hashOfConfig":"121"},{"size":2737,"mtime":1631841618803,"results":"126","hashOfConfig":"121"},{"size":2896,"mtime":1634952806465,"results":"127","hashOfConfig":"121"},{"size":3038,"mtime":1635246259166,"results":"128","hashOfConfig":"121"},{"size":14617,"mtime":1635241793491,"results":"129","hashOfConfig":"121"},{"size":2888,"mtime":1635209895709,"results":"130","hashOfConfig":"121"},{"size":9924,"mtime":1633924694182,"results":"131","hashOfConfig":"121"},{"size":16941,"mtime":1633907562222,"results":"132","hashOfConfig":"121"},{"size":4066,"mtime":1633907447252,"results":"133","hashOfConfig":"121"},{"size":2912,"mtime":1635062058055,"results":"134","hashOfConfig":"121"},{"size":12270,"mtime":1633907138147,"results":"135","hashOfConfig":"121"},{"size":3921,"mtime":1635248132769,"results":"136","hashOfConfig":"121"},{"size":9960,"mtime":1633926257675,"results":"137","hashOfConfig":"121"},{"size":19316,"mtime":1635217056481,"results":"138","hashOfConfig":"121"},{"size":10566,"mtime":1633907486607,"results":"139","hashOfConfig":"121"},{"size":10310,"mtime":1633907532060,"results":"140","hashOfConfig":"121"},{"size":11576,"mtime":1633907377697,"results":"141","hashOfConfig":"121"},{"size":13529,"mtime":1633907412856,"results":"142","hashOfConfig":"121"},{"size":537,"mtime":1633159501976,"results":"143","hashOfConfig":"121"},{"size":596,"mtime":1633159466368,"results":"144","hashOfConfig":"121"},{"size":340,"mtime":1631840390443,"results":"145","hashOfConfig":"121"},{"size":1030,"mtime":1633907286774,"results":"146","hashOfConfig":"121"},{"size":1415,"mtime":1633916204984,"results":"147","hashOfConfig":"121"},{"size":4710,"mtime":1633907104997,"results":"148","hashOfConfig":"121"},{"size":944,"mtime":1633907426076,"results":"149","hashOfConfig":"121"},{"size":12469,"mtime":1633907026577,"results":"150","hashOfConfig":"121"},{"size":1274,"mtime":1633880613771,"results":"151","hashOfConfig":"121"},{"size":799,"mtime":1633880302589,"results":"152","hashOfConfig":"121"},{"size":323,"mtime":1633159928665,"results":"153","hashOfConfig":"121"},{"size":259,"mtime":1633159672341,"results":"154","hashOfConfig":"121"},{"size":1819,"mtime":1633907075937,"results":"155","hashOfConfig":"121"},{"size":4286,"mtime":1635247663722,"results":"156","hashOfConfig":"121"},{"size":1406,"mtime":1633880747843,"results":"157","hashOfConfig":"121"},{"size":1059,"mtime":1633909979563,"results":"158","hashOfConfig":"121"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},"16dut6b",{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"161"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"161"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"161"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"161"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"161"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"161"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"161"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"161"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"161"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"161"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"161"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"161"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"161"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"161"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"161"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"161"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"161"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"161"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"161"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"1oxcxuq",{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"262"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"262"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"262"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"262"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"262"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"262"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"262"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"262"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"262"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"262"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"262"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"262"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"262"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"262"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"262"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"262"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"262"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"262"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"262"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"262"},"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/index.js",[],["343","344"],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/App.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/Center.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/Header.js",["345"],"// note ---  component file name should be Start With capital letter like Header.js not header.js\n\nimport React,{useState} from \"react\";\nimport \"./Header.css\";\nimport { Menu, LocationOn,WatchLater,ArrowDownward } from \"@mui/icons-material\";\nimport { useHistory, Link } from 'react-router-dom';\nimport Sidebar from \"./components/Sidebar\";\n\nfunction Header() {\n   \n  const [headbg,setheadbg]=useState('transparent');\n  const [shadow,setshadow]=useState('none');\n  const [inputdisplay,setinputdisplay]=useState(0);\n\n\n  window.addEventListener('scroll',()=>{\n    if(window.scrollY>=50){\n      setheadbg('#FFFFFF');\n      setshadow('rgb(226 226 226) 0px -2px 0px inset');\n      setinputdisplay(1);\n\n    }\n    else{\n      setheadbg('transparent');\n      setshadow('none');  \n      setinputdisplay(0);\n\n\n    }\n  })\n\n  \n \n\n  return (\n    <>\n      <div className=\"header\">\n        <div className=\"header__background\">\n          <img\n            src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/f54fdfb464db5da7c42e62c735bdf8f1.svg\"\n            alt=\"part 1\"\n          />\n          <div className=\"header__backgroundmid\"></div>\n          <img\n            src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/bab80ef67bbbc99f2b7d45cfc395eb1b.svg\"\n            alt=\" part 2\"\n          />\n        </div>\n\n        <div className=\"header__upper\">\n          <div className=\"header__upperheader\"  style={{backgroundColor:headbg,boxShadow:shadow}}   >\n            <div className=\"header__upperheaderleft\">\n              <Menu /><Sidebar />\n              \n            </div>\n            <div className=\"header__upperheadercenter\"  style={{transform:`scaleX(${inputdisplay})`}}    >\n              <LocationOn />\n              <input type=\"text\" placeholder=\"Enter delivery address\" />\n            </div>\n            <Link to= \"/clogin\">\n            <div className=\"header__upperheaderright\">\n               <p>Sign in </p>\n            </div></Link>\n          </div>\n        </div>\n        <div className=\"header__center\">\n        <div className=\"header__centerbox\">\n        <h1>   Want food? Get food.  </h1> \n        <div className=\"header__centercenter\">\n            <div className=\"header__center1\">\n                <LocationOn   />\n                <input type=\"text\" placeholder=\"Enter anything\"    />\n            </div>\n            <div className=\"header__center2\">\n                <WatchLater />\n                <h3> Deliver now  </h3> \n                <ArrowDownward />\n\n            </div>\n            <div className=\"header__center3\">\n                <h3>   Find food </h3>\n            </div>\n        </div>\n        \n\n        </div>\n\n        </div>\n\n\n      </div>\n    </>\n  );\n}\n\nexport default Header;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/Footer.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Favourite.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Register.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Login.js",["346"],"import React, {useState} from 'react';\nimport './Login.css';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { loginRestaurant } from '../actions/resActions';\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction Login() {\n\n    const dispatch = useDispatch();\n    const [email , setEmail ] = useState(\"\");\n    const [pwd , setPwd ] = useState(\"\");\n    const [error , setError] = useState(\"\");\n    const history = useHistory();\n    \n    async function cuslogin(event) {\n        event.preventDefault();\n        try {\n            const loginAdmin = {\n                email,\n                pwd,\n            };\n            console.log(\"------\",loginAdmin)\n            console.log(\"local\", localStorage.getItem('token'))\n            const res = await axios.post(\"/api/restaurant/login\",loginAdmin);\n                localStorage.setItem('restaurant', JSON.stringify(res.data));\n                console.log(\"response\",res);\n                console.log(\"data\",res.data);\n        \n                localStorage.setItem('token', res.data.token);\n            if(res.data.success == 1) {\n                dispatch(loginRestaurant({\n                    email: res.data.email,\n                    restaurantId: res.data.restaurantId,\n                    name: res.data.name,\n                    loggedIn: true, \n                }))\n              history.push(\"/rhome\")\n            }\n            //console.log(\"response\", res);\n        }catch(err){\n            console.log(err);\n            console.log(err.response);\n            console.log(err.response.data)\n            console.log(\"incatch\")\n            setError(err.response.data.message)\n        }\n    }\n\n    const divStyle = {\n        color: 'red'\n      }; \n\n    return(\n    <div className =\"login_cen\">\n    <div className =\"logi\">\n            <img className=\"login__logo\" \n            src=\"https://d1a3f4spazzrp4.cloudfront.net/arch-frontend/1.1.1/d1a3f4spazzrp4.cloudfront.net/eats/eats-logo-1a01872c77.svg\"\n            alt=\"\"\n            />\n        <div className =\"login_wc\">\n            <h4>Welcome back</h4>\n            <div className =\"login__container\">\n                <p>Sign in with your email and password</p>\n                <form>\n                    <input type=\"text\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} value={email}></input>\n                    <input type=\"password\" placeholder=\"password\" onChange={(e) => setPwd(e.target.value)} value={pwd}></input>\n                    <button onClick={cuslogin} className=\"login__button\">Next</button>\n                </form>\n                <div className=\"login__text\">\n                    <p>New to Uber?</p>\n                    <Link to=\"/rregister\" className=\"login_ul\"><p className=\"login__create\">Create an account</p></Link>\n                </div>\n                <div style = {divStyle}>\n                    {error && <p> {error} </p>}\n                        \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n    )\n}\n\n\n\nexport default Login;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Home.js",["347","348"],"import React, { useEffect, useState } from \"react\";\n//import React, { useState, useEffect, useContext } from 'react'\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport M from \"materialize-css\";\nimport Button from \"@mui/material/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport Restaurant from \"../components/Restaurants\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Menu,\n  LocationOn,\n} from \"@mui/icons-material\";\nimport \"./Home.css\";\nimport ShoppingCartOutlinedIcon from \"@mui/icons-material/ShoppingCartOutlined\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\n\nconst Home = () => {\n  const history = useHistory();\n  const dispatch= useDispatch();\n  const [search, setsearch] = useState([]);\n  const [restaurants, setRestaurants] = useState([]);\n  const [filteredRestaurants, setFilteredRestaurants] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [headbg, setheadbg] = useState(\"transparent\");\n  const [shadow, setshadow] = useState(\"none\");\n \n\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY >= 50) {\n      setheadbg(\"#FFFFFF\");\n      setshadow(\"rgb(226 226 226) 0px -2px 0px inset\");\n \n    } else {\n      setheadbg(\"transparent\");\n      setshadow(\"none\");\n\n    }\n  });\n\n  useEffect(() => setFilteredRestaurants(restaurants), [restaurants])\n\n  // const Item = styled(Paper)(({ theme }) => ({\n  //   ...theme.typography.body2,\n  //   padding: theme.spacing(2),\n  //   textAlign: 'center',\n  //   color: theme.palette.text.secondary,\n  // }));\n\n  function signout(){\n    dispatch(logout());\n    localStorage.setItem(\"customer\",null);\n    history.push(\"/\")\n  }\n\n  const useModal = () => {\n    const [isShowing, setIsShowing] = useState(false);\n\n    function toggle() {\n      setIsShowing(!isShowing);\n    }\n\n    return {\n      isShowing,\n      toggle,\n    };\n  };\n\n  const Modal = ({ isShowing, hide }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <div className=\"modal-overlay\" />\n            <div\n              className=\"modal-wrapper\"\n              aria-modal\n              aria-hidden\n              tabIndex={-1}\n              role=\"dialog\"\n            >\n              <div className=\"modal\">\n              <div style={{ display: \"flex\", alignItems: \"center\",fontSize:30}}> {JSON.parse(localStorage.getItem(\"cart\"))?JSON.parse(localStorage.getItem(\"cart\"))[0].rname: <p/>}</div>\n               \n                <div className=\"modal-header\" style={{justifyContent: 'flex-end'}}>\n                  <button\n                    type=\"button\"\n                    className=\"modal-close-button\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={hide}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <Typography component=\"div\" variant=\"h5\"></Typography>\n              \n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"text.secondary\"\n                  component=\"div\"\n                  style={{paddingBottom: '25px'}}\n                >\n                  <br />\n                  {localStorage.getItem(\"cart\")? \n                  <div >Cart Items\n                  <div style={{display :\"flex\", flexDirection:\"row\"}}> \n                  <div>Dish name  </div> <div style={{paddingLeft:\"85px\"}}>   Quantity </div><div style={{paddingLeft:\"110px\"}}>  Subtotal</div></div></div>\n                  :<p></p>}\n                \n                </Typography>\n                <Grid container spacing={3}>\n                  \n                  {localStorage.getItem(\"cart\")?localStorage.getItem(\"cart\") &&\n                    JSON.parse(localStorage.getItem(\"cart\")).map((dish) => (\n                      <Grid container item>\n                        <Grid container xs={4}>\n                          {dish.dname}\n                        </Grid>\n                        <Grid container xs={4}>\n                          {dish.quantity}\n                        </Grid>\n                        <Grid container xs={4}>\n                          ${dish.subtotal}\n                        </Grid>\n                      </Grid>\n                    )):<Typography\n                    variant=\"subtitle1\"\n                    color=\"text.secondary\"\n                    component=\"div\"\n                    style={{paddingBottom: '25px'}}\n                  > Cart is empty </Typography>}\n                  \n                </Grid>\n                <Box\n                  sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}\n                >\n                  \n\n                  {localStorage.getItem(\"cart\")? <Link to ='/checkout'style={{paddingTop: '40px'}}>\n                  \n                  <Button\n                    onClick={() => {\n                      toggle();\n                    }}\n                    style={{color:'white', backgroundColor:'black', display:'flex',}}\n                  >\n                    GO TO CHECKOUT . ${localStorage.getItem(\"order\") && JSON.parse(localStorage.getItem(\"order\")).total}\n                  </Button></Link> : <Button disabled\n                    onClick={() => {\n                      toggle();\n                    }}\n                    style={{color:'white', backgroundColor:'black', display:'flex',}}\n                  > ADD ITEMS\n                  </Button>}\n                </Box>\n              </div>\n            </div>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  const { isShowing, toggle } = useModal();\n\n  useEffect(() => {\n    getRestaurants();\n  }, []);\n\n  const getRestaurants = async () => {\n    const customerId = JSON.parse(localStorage.getItem(\"customer\")).customerId;\n    await axios\n      .get(\n        `/api/customerprofile/getRestaurants/${customerId}`,\n        {}\n      )\n      //     .then((response) =>\n      //   {\n      //     return JSON.parse(response)\n      //   })\n      .then((responseData) => {\n        console.log(\"res\", responseData);\n        if (responseData.data.error) {\n          console.log(\"res\", responseData);\n          M.toast({\n            html: responseData.data.error,\n            classes: \"#c62828 red darken-3\",\n          });\n        } else {\n          //setcustomerData(responseData.data)\n          setRestaurants(responseData.data);\n          console.log(responseData.data);\n          //console.log(\"resss \",customerData);\n          // localStorage.setItem('restaurant', JSON.stringify(responseData.data));\n        }\n      });\n  };\n\n  function searchRestaurant(name) {\n    setsearch(true);\n    const Name = { name: name };\n    console.log(Name);\n    axios\n      .post(\"/api/customerprofile/searchRestaurant\", Name)\n\n      .then((responseData) => {\n        console.log(\"res\", responseData);\n        if (responseData.data.error) {\n          console.log(\"res\", responseData);\n          M.toast({\n            html: responseData.data.error,\n            classes: \"#c62828 red darken-3\",\n          });\n        } else {\n          setRestaurants(responseData.data);\n          //setRestaurants(responseData.data)\n          console.log(responseData.data);\n          //console.log(\"resss \",customerData);\n          //localStorage.setItem('restaurant', JSON.stringify(responseData.data));\n        }\n      });\n  }\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    //e.preventDefault();\n    searchRestaurant(value);\n    // or you can send data to backend\n  };\n\n  const handleKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.key === \"Enter\") {\n      console.log(\"enter\");\n      handleSubmit();\n    }\n  };\n\n  const [filters, updateFilters] = useState({\n    delivery: true,\n    pickup: false,\n    vegan: true,\n    veg: true,\n    nonVeg: true\n  })\n\n  const deliveryOrPickup = (delivery, pickup, rname) => {\n    if (delivery === \"Yes\" && filters.delivery) {\n      return true\n    }\n    else if (pickup === \"Yes\" && filters.pickup) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  useEffect(() => {\n    setFilteredRestaurants(\n      restaurants\n      .filter((restaurent) => (deliveryOrPickup(restaurent.delivery, restaurent.pickup, restaurent.rname)))\n      .filter((restaurent) => (( filters.veg && restaurent.veg === \"Yes\" ) || ( filters.nonVeg && restaurent.nonVeg === \"Yes\" ) || ( filters.vegan && restaurent.vegan === \"Yes\" )))\n    )\n  }, [filters])\n\n  console.log(\"filtered\", filteredRestaurants)\n  console.log(\"all\", restaurants)\n\n\n  return (\n    <div className=\"cushome\">\n      <div className=\"header__upper\">\n        <div\n          className=\"header__upperheader\"\n          style={{ backgroundColor: headbg, boxShadow: shadow }}\n        >\n          <div className=\"header__upperheaderleft\">\n            <Menu\n              style={{\n                marginRight: \"30px\",\n              }}\n              onClick={handleDrawerOpen}\n            />\n            <a href=\"/chome\">\n              <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />\n            </a>\n          </div>\n\n          <div className=\"header__upperheadercenter\">\n            <LocationOn />\n            <input\n              type=\"text\"\n              placeholder=\"What are you craving? \"\n              value={value}\n              onChange={handleChange}\n              onKeyPress={handleKeypress}\n            />\n          </div>\n          <div className=\"header__upperheaderright\" onClick={toggle}>\n            <p>\n              {\" \"}\n              <ShoppingCartOutlinedIcon style={{ color: \"black\" }} />\n              <span className=\"empty-message\">\n                {\" \"}\n                {localStorage.getItem(\"cart\")\n                  ? JSON.parse(localStorage.getItem(\"cart\")).length\n                  : \"Your cart is empty\"}\n              </span>{\" \"}\n            </p>\n            <Modal\n              isShowing={isShowing}\n              hide={toggle}\n              style={{ position: \"absolute\", width: \"240px\", height: \"340px\" }}\n            />\n          </div>\n          <div className=\"header__upperheaderright\" onClick={signout}>\n            <p> Sign out </p>\n          </div>\n        </div>\n\n        <Drawer\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth,\n              boxSizing: \"border-box\",\n            },\n          }}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n        >\n          <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n            <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />\n          </DrawerHeader>\n          <Divider />\n          <List>\n          <ListItem >\n          \n                <ListItemIcon >\n                <Link to ='./cprofile' style={{color:'black',}}>\n                 <AccountBoxIcon /> </Link>  \n                </ListItemIcon> \n                <ListItemText> <Link to ='./cprofile' style={{textDecoration:'none', color:\"black\"}}>  View profile </Link></ListItemText>\n              </ListItem>\n        <ListItem >\n          \n                <ListItemIcon>\n                <Link to ='./cprofile' style={{color:'black',}}>\n                 <AssignmentIndIcon />   \n                 </Link>  \n                </ListItemIcon> \n                <ListItemText> <Link to ='./cprofile' style={{textDecoration:'none', color:\"black\"}}>  Update profile </Link></ListItemText>\n              </ListItem>\n              <ListItem >\n           \n                <ListItemIcon>\n                <Link to ='./favourite' style={{color:'black',}}> \n                 <FavoriteIcon />  </Link>\n                </ListItemIcon> \n                <ListItemText>  <Link to ='./favourite' style={{textDecoration:'none', color:\"black\"}}>  Favourites </Link></ListItemText>\n              </ListItem>\n              <ListItem >\n          \n                <ListItemIcon>\n                <Link to ='./pastorders' style={{color:'black',}}> \n                 <ReceiptIcon />  </Link> \n                </ListItemIcon> \n                <ListItemText>  <Link to ='./pastorders' style={{textDecoration:'none', color:\"black\"}}>   Orders</Link></ListItemText>\n              </ListItem>\n          </List>\n          <Divider />\n        </Drawer>\n      </div>\n      <div></div>\n      <Grid\n        container\n        style={{\n          paddingTop: \"120px\",\n          paddingLeft:'30px'\n        }}\n      >\n        <Grid container item xs={2} style={{\n          height: \"fit-content\",\n          paddingTop: '20px'\n        }}>\n          <Grid container item>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Choose delivery option</FormLabel>\n              <RadioGroup defaultValue=\"delivery\" name=\"radio-buttons-group\" >\n                <FormControlLabel\n                  value=\"delivery\"\n                  control={<Radio style ={{\n                    color: \"black\",\n                  }}/>}\n                  label=\"Delivery\"\n                  onChange={\n                    (event) => updateFilters(\n                      {...filters,\n                        delivery: event.target.checked,\n                        pickup: !event.target.checked,\n                      }\n                    )\n                  }\n                />\n                <FormControlLabel\n                  value=\"pickup\"\n                  control={<Radio style ={{\n                    color: \"black\",\n                  }}/>}\n                  label=\"Pickup\"\n                  onChange={\n                    (event) => updateFilters(\n                      {...filters,\n                        pickup: event.target.checked,\n                        delivery: !event.target.checked,\n                      }\n                    )\n                  }\n                />\n              </RadioGroup>\n            </FormControl>\n\n          </Grid>\n          <Grid container item style={{paddingTop: '50px'}}>\n\n            <FormGroup >\n              <FormLabel component=\"legend\">Diet preference</FormLabel>\n              <FormControlLabel\n                control={<Checkbox defaultChecked style ={{\n                  color: \"black\",\n                }}/>}\n                label=\"Vegan\"\n                onChange={\n                  (event) => updateFilters(\n                    {...filters,\n                      vegan: event.target.checked\n                    }\n                  )\n                }\n              />\n              <FormControlLabel\n                control={<Checkbox defaultChecked  style ={{\n                  color: \"black\",\n                }}\n                />}\n                label=\"Veg\"\n                onChange={\n                  (event) => updateFilters(\n                    {...filters,\n                      veg: event.target.checked\n                    }\n                  )\n                }\n              />\n              <FormControlLabel\n                control={<Checkbox defaultChecked style ={{\n                  color: \"black\",\n                }}/>}\n                label=\"Non-Veg\"\n                onChange={\n                  (event) => updateFilters(\n                    {...filters,\n                      nonVeg: event.target.checked\n                    }\n                  )\n                }\n              />\n            </FormGroup>\n          </Grid>\n        </Grid>\n        \n        {search ? (\n          <Grid container item xs={10} spacing={5} style={{paddingRight:'40px'}}>\n            {\n              filteredRestaurants.map((restaurant) => (\n                <Grid container item xs={4}>\n                  <Restaurant\n                    id={restaurant.restaurantId}\n                    Name={restaurant.rname}\n                    Opens_at={restaurant.fromTime}\n                    imageKey={restaurant.profilepic}\n                    desc= {restaurant.rdesc}\n                  />\n                </Grid>\n              ))\n            }\n          </Grid>\n        ) : (\n          <Grid container item xs={10} spacing={5} style={{paddingRight:'40px'}}>\n            {filteredRestaurants.map((restaurant) => (\n              <Grid container item xs={4}>\n                <Restaurant\n                  id={restaurant.restaurantId}\n                  Name={restaurant.rname}\n                  Opens_at={restaurant.fromTime}\n                  imageKey={restaurant.profilepic}\n                  desc= {restaurant.rdesc}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n\n//Sidebar\n\nconst drawerWidth = 240;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  })\n);\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/UpdateProfile.js",["349","350","351","352","353","354","355","356"],"import React, { useState, useEffect } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport M from 'materialize-css'\nimport { Formik } from 'formik';\nimport { Button } from 'react-bootstrap'\nimport {  useHistory } from 'react-router-dom'\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector-material-ui-new\";\nimport './UpdateProfile.css'\nimport Showprofile from './Showprofile';\nimport Profilepic from './Profilepic';\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n//import \"materialize-css/dist/css/materialize.min.css\";\n\nconst UpdateProfile = () => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [customerData, setcustomerData] = useState([])\n    const [image, setImage] = useState([])\n    const [url, setUrl] = useState([])\n    const [dob, setDob] = useState([])\n    const [headbg,setheadbg]=useState('transparent');\n    const [shadow,setshadow]=useState('none');\n    const [inputdisplay,setinputdisplay]=useState(0);\n\n\n  window.addEventListener('scroll',()=>{\n    if(window.scrollY>=50){\n      setheadbg('#FFFFFF');\n      setshadow('rgb(226 226 226) 0px -2px 0px inset');\n      setinputdisplay(1);\n\n    }\n    else{\n      setheadbg('transparent');\n      setshadow('none');\n      setinputdisplay(0);\n\n\n    }\n  })\n\n\n  function signout(){\n    dispatch(logout());\n    localStorage.setItem(\"customer\",null);\n    history.push(\"/\")\n  }\n\n    useEffect( () => {\n        const customerId =  JSON.parse(localStorage.getItem(\"customer\")).customerId;\n\n        axios.get(`/api/customerprofile/${customerId}`,{})\n        .then(response => {\n            console.log(\"res\",response);\n            if (response.data.error) {\n                console.log(\"res\",response);\n                M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n            }\n            else {\n\n                    setcustomerData(response.data[0])\n                    console.log(response.data[0])\n                    //console.log(\"resss \",customerData);\n                    localStorage.setItem('customer', JSON.stringify(response.data[0]));\n\n                    setDob((customerData.DOB == null )? customerData.DOB : customerData.DOB.substr(0,10));\n                \n            }\n        })\n       \n            // console.log(\"res\",response);\n            // if (response.data.error) {\n            //     console.log(\"res\",response.data[0]);\n            //    // M.toast({ html: response.data[0].error, classes: \"#c62828 red darken-3\" })\n            // }\n        \n            \n    }, []\n        );\n\n\nreturn (customerData.email?\n   \n    \n                    <section className=\"section\" id=\"about\">\n                <div className=\"update\" >\n                   \n                    <div className=\"header__upper\">\n                <div className=\"header__upperheader\"  style={{backgroundColor:headbg,boxShadow:shadow}}   >\n                 \n                  <div className=\"header__upperheaderleft\">\n                  <Link to = \"/chome\">\n                     <img\n                         src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                          alt=\"uber eats\" />  </Link>\n                 </div>\n                \n                 {/* <div className=\"header__upperheadercenter\"   >\n                 \n                    <input type=\"text\" placeholder=\"What are you craving? \" />\n                 </div> */}\n\n                 <div className=\"header__upperheaderright\"  onClick={signout}>\n                      <p> Sign out </p>\n                 </div>\n                </div>\n             </div>\n                   \n                    <br />\n                    <br />\n                    <div className= \"details_img\">\n                    <Showprofile />\n                    <Profilepic />\n                    </div>\n                    <div className=\"row\" >\n                    \n                   \n                    {\n                        \n                    \n                        <Formik\n                            style={{ width: '40%' }}\n                            initialValues={{\n                                cname: customerData.cname,\n                                email: customerData.email,\n                                mobileNo : customerData.mobileNo,\n                                city: customerData.city,\n                                stateId: customerData.stateId,\n                                countryId: customerData.countryId,\n                                \n                                DOB: customerData.DOB?customerData.DOB.substr(0,20):null,\n                                nickname: customerData.nickname,\n                                about: customerData.about,\n                                \n                            }}\n                            onSubmit={(values, { setSubmitting, resetForm }) => {\n                                console.log(values)\n                                // if (image) {\n                                //     const data = new FormData()\n                                //     data.append(\"api_key\", '757831828593633');\n                                //     data.append(\"file\", image)\n                                //     data.append(\"upload_preset\", \"l3ihyhha\")\n                                //     data.append(\"cloud_name\", \"du8oeufnp\")\n                                //     fetch(\"https://api.cloudinary.com/v1_1/du8oeufnp/image/upload\", {\n                                //         method: \"post\",\n                                //         body: data\n                                //     }).then(res => res.json())\n                                //         .then(res => {\n                                //             console.log(res + \"Hiii\")\n                                //             setUrl(res.url)\n                                //         })\n                                //         .catch(err => {\n                                //             console.log(err)\n                                //         })\n                                // }\n                                const customerId = JSON.parse(localStorage.getItem(\"customer\")).customerId\n                                console.log(customerId)\n                                axios.post(`/api/customerprofile/updatedetails/`, { customerId ,values: values})\n                                    .then(response => {\n                                        console.log(\"update\",response)\n                                        if (response.data.error) {\n                                            M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n                                        }\n                                        else {\n                                            toast.success('Updated details successful', {\n                                                position: \"top-right\",\n                                                autoClose: 5000,\n                                                hideProgressBar: true,\n                                                closeOnClick: true,\n                                                pauseOnHover: true,\n                                                draggable: true,\n                                                progress: undefined,\n                                                });\n                                            \n                                        }\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                //history.push('/chome')\n                            }}>\n                            {({\n                                errors,\n                                handleBlur,\n                                handleChange,\n                                handleSubmit,\n                                isSubmitting,\n                                touched,\n                                values\n                            }) => (\n                                <form id=\"contactForm\" style={{ width: '40%' }} name=\"sentMessage\" onSubmit={handleSubmit}>\n                                    <h4 className=\"font-weight-normal\" style={{ fontFamily: 'UberMoveText-Medium,Helvetica,sans-serif' }}> Update details</h4>\n                                    <br />\n                                    \n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group\">\n                                                <label style={{ width: \"100%\" }}>Customer Name<input required type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"cname\"  onBlur={handleBlur} onChange={handleChange} value={values.cname} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}> Email <input required type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"email\" onBlur={handleBlur} onChange={handleChange} value={values.email} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Contact Number <input required type=\"number\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"mobileNo\" onBlur={handleBlur} onChange={handleChange} value={values.mobileNo} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>City <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"city\" onBlur={handleBlur} onChange={handleChange} value={values.city} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Country<CountryDropdown style={{ width: \"100%\" }}value={values.countryId} className=\"form-control\" id=\"countryId\" onBlur={handleBlur} onChange= {handleChange(\"countryId\")} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                            <label>State  <RegionDropdown style={{ width: \"100%\" }} country={values.countryId} value={values.stateId} className=\"form-control\" id=\"stateId\" onBlur={handleBlur} onChange={handleChange(\"stateId\") }/></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Description <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"about\" onBlur={handleBlur} onChange={handleChange} value={values.about} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Date of birth <input type=\"date\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"DOB\" onBlur={handleBlur} onChange={handleChange} value={values.DOB} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Nickname <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"nickname\" onBlur={handleBlur} onChange={handleChange} value={values.nickname} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n                                    \n                                        </div>\n                                    </div>\n                                    <Button type=\"submit\" className= \"update_button\"style={{ width: \"100%\", borderRadius: 5 }} >\n                                        Save changes\n                                    </Button>\n                                    <br />\n                                    <br />\n                                </form>\n                                \n                            )}\n                        </Formik>\n                        \n}\n                    </div>\n                </div>\n            </section>:<h1></h1> \n        \n\n\n    // <form onSubmit={submit}>\n    //   <input\n    //     type=\"text\"\n    //     name=\"user name \"\n    //     value={customerData.cname}\n    //     onChange={e => setUser({ ...user, name: e.target.value })}\n    //   />\n    //   {user.errors.name && <p>{user.errors.name}</p>}\n\n    //   <input\n    //     type=\"email\"\n    //     name=\"user[email]\"\n    //     value={user.email}\n    //     onChange={e => setUser({ ...user, email: e.target.value })}\n    //   />\n    //   {user.errors.name && <p>{user.errors.name}</p>}\n\n    //   <input type=\"submit\" name=\"Sign Up\" />\n    // </form>\n          \n  )\n}\n  export default UpdateProfile;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Home.js",["357","358","359","360","361","362","363"],"import React, { useEffect , useState} from \"react\";\n//import React, { useState, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport Dish from '../components/Resdishes'\nimport { useHistory } from 'react-router-dom'\nimport Grid from '@mui/material/Grid';\nimport { Menu, LocationOn} from \"@mui/icons-material\";\nimport './Home.css'\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport { useDispatch } from \"react-redux\";\nimport { logoutRestaurant } from \"../actions/resActions\";\nimport { styled,useTheme } from \"@mui/material/styles\";\nimport Drawer from \"@mui/material/Drawer\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\n\nconst Home =()=>{\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [customerData, setcustomerData] = useState([])\n    const [restaurant, setRestaurant] = useState([])\n    const [dishes, setDishes] = useState([])\n    const [image, setImage] = useState([])\n    const [headbg,setheadbg]=useState('transparent');\n  const [shadow,setshadow]=useState('none');\n  \n\n\n  window.addEventListener('scroll',()=>{\n    if(window.scrollY>=50){\n      setheadbg('#FFFFFF');\n      setshadow('rgb(226 226 226) 0px -2px 0px inset');\n    \n\n    }\n    else{\n      setheadbg('transparent');\n      setshadow('none');\n     \n\n\n    }\n  })\n\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  function signout(){\n    dispatch(logoutRestaurant());\n    localStorage.setItem(\"restaurant\",null);\n    history.push(\"/\")\n  }\n\n  const Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n    useEffect(()=>{\n      getDishes();\n      getRestaurant();\n    }, []);\n\n  \n    const getDishes = async () =>{\n      const restaurantId =  JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId;\n      //const restaurantId =1\n      await axios.post(`/api/restaurant/getdish/${restaurantId}`,{})\n      .then(responseData => {\n          if (responseData.data.error) {\n              console.log(\"res\",responseData);\n             // M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n          }\n          else {\n            console.log(\" dishes\",responseData.data)\n                  //setcustomerData(responseData.data)\n                  setDishes(responseData.data)\n                  \n                  //console.log(\"resss \",customerData);\n                  //localStorage.setItem('dish', JSON.stringify(responseData.data));\n              \n          }\n      })\n\n  }\n  const getRestaurant = async () =>{\n    const restaurantId =  JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId;\n    //const restaurantId =1\n    await axios.post(`/api/restaurant/profile/${restaurantId}`,{})\n    .then(responseData => {\n        console.log(\"res\",responseData);\n        if (responseData.data.error) {\n           // M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n        }\n        else {\n                //setcustomerData(responseData.data)\n                setRestaurant(responseData.data)\n                console.log(\"restaurant\",responseData.data)\n                //console.log(\"resss \",customerData);\n                localStorage.setItem('restaurant', JSON.stringify(responseData.data));\n            \n        }\n    })\n\n} \nconst deleteDish =  (id) =>{\n\n  axios.post(`/api/restaurant/deletedish/${id}`,{})\n .then(responseData => {\n     if (responseData.data.error) {\n        // M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n     }\n     else {\n             setDishes(dishes.filter((dish) => dish.dishId !== id))\n             //console.log(\" dishes\",responseData.data)\n             \n             //console.log(\"resss \",customerData);\n             //localStorage.setItem('dish', JSON.stringify(responseData.data));\n         \n     }\n })\n\n}\n\n    return(dishes?\n\n        <div className= \"reshome\">\n        <div className=\"header__upper\">\n           <div className=\"header__upperheader\"  style={{backgroundColor:headbg,boxShadow:shadow}}   >\n             <div className=\"header__upperheaderleft\">\n                <Menu onClick={handleDrawerOpen}></Menu>\n                <Link to='/rhome'>\n                <img\n                    src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                     alt=\"uber eats\" /></Link>\n            </div>\n            {/* <div className=\"header__upperheadercenter\"   >\n               <LocationOn />\n               <input type=\"text\" placeholder=\"What are you craving? \" />\n            </div> */}\n            <div className=\"header__upperheadercenter\">\n            <LocationOn />\n            <input\n              type=\"text\"\n              placeholder=\"What are you craving? \"\n              \n            />\n          </div>\n            <div className=\"header__upperheaderright\" onClick={signout}>\n                 <p> Sign out </p>\n            </div>\n            {/* <div className=\"header__upperheaderright\">\n                 <p> Add dishes </p>\n            </div> */}\n           </div>\n        \n           \n        </div>\n        \n        <Drawer\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            // \"& .MuiDrawer-paper\": {\n            //   width: drawerWidth,\n            //   boxSizing: \"border-box\",\n            // },\n          }}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n        >\n          <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n            <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />\n          </DrawerHeader>\n          <Divider />\n          <List>\n          <ListItem >\n          \n                <ListItemIcon>\n                <Link to ='./rprofile' style={{color:'black',}}>\n                 <AccountBoxIcon /> </Link>  \n                </ListItemIcon> \n                <ListItemText> <Link to ='./rprofile' style={{textDecoration:'none', color:\"black\"}}>  View profile </Link></ListItemText>\n              </ListItem>\n        <ListItem >\n          \n                <ListItemIcon>\n                <Link to ='./rprofile' style={{color:'black',}}>\n                 <AssignmentIndIcon />   \n                 </Link>  \n                </ListItemIcon> \n                <ListItemText> <Link to ='./rprofile' style={{textDecoration:'none', color:\"black\"}}>  Update profile </Link></ListItemText>\n              </ListItem>\n              <ListItem >\n           \n                <ListItemIcon>\n                <Link to ='./adddish' style={{color:'black',}}> \n                 <AddBoxIcon />  </Link>\n                </ListItemIcon> \n                <ListItemText>  <Link to ='./adddish' style={{textDecoration:'none', color:\"black\"}}>  Add dishes </Link></ListItemText>\n              </ListItem>\n              <ListItem >\n          \n                <ListItemIcon>\n                <Link to ='./allorders' style={{color:'black',}}> \n                 <ReceiptIcon />  </Link> \n                </ListItemIcon> \n                <ListItemText>  <Link to ='./allorders' style={{textDecoration:'none', color:\"black\"}}>   Orders</Link></ListItemText>\n              </ListItem>\n          </List>\n          <Divider />\n        </Drawer>\n        {/* <Main open={open}>\n        <DrawerHeader />\n      </Main> */}\n        \n        \n        <div className = 'dish_home' style={{marginTop:100, marginLeft: 0, display:\"flex\"}}>\n       \n        <Box sx={{ flexGrow: 1 }}>\n        <div className=\"name\" style={{paddingLeft: 0, fontSize:22}}>\n           Welcome back {restaurant.rname}\n        </div>\n        <div>\n           \n           {restaurant.profilepic && <img style={{\n   alignSelf: 'center',\n   height: '400px',\n   width: '100%',\n   borderWidth: 1,\n   marginBottom: 50,\n   marginRight: \"30px\",\n   \n   \n }} src={`/api/images/${restaurant.profilepic}`} className=\"showProfile_img\"  />}\n            </div>\n        <div className=\"name\" style={{paddingLeft: 40, fontSize:18}}>\n           Your popular dishes\n        </div>\n        <Grid container item xs={10} spacing={5}>\n                {\n                dishes.map(dish =>(\n                \n                <Grid container item xs={4} key={dish.dishId}>\n      <Item>\n      <Dish id={dish.dishId} func={deleteDish}  dname={dish.dname} des={dish.ddesc} ing={dish.ingredients} price={dish.Price} imageKey={dish.profilepic} />\n    </Item>\n    </Grid>\n                ))\n                }\n                </Grid>\n\n                \n\n                </Box>\n            </div>\n           \n          \n    </div>:<h1></h1>\n    )\n    \n}\n\nexport default Home;\n\nconst drawerWidth = 240;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  })\n);\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Register.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Login.js",["364"],"import React, {useState} from 'react';\nimport './Login.css';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/userActions';\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction Login() {\n\n    const dispatch = useDispatch();\n    const [email , setEmail ] = useState(\"\");\n    const [pwd , setPwd ] = useState(\"\");\n    const [error , setError] = useState(\"\");\n    const history = useHistory();\n    \n    async function cuslogin(event) {\n        event.preventDefault();\n        try {\n            const loginAdmin = {\n                email,\n                pwd,\n            };\n            console.log(\"------\",loginAdmin)\n            console.log(\"local\", localStorage.getItem('token'))\n            const res = await axios.post(\"/api/customer/login\",loginAdmin)\n        localStorage.setItem('customer', JSON.stringify(res.data));\n        localStorage.setItem('token', res.data.token);\n        if(res.data.success == 1) {\n            dispatch(login({\n                email: res.data.email,\n                customerId: res.data.customerId,\n                name: res.data.name,\n                loggedIn: true, \n            }))\n          history.push(\"/chome\")\n            \n            \n            }\n        }\n            //console.log(\"response\", res);\n        catch(err){\n            console.log(\"error\",err.response.data.message);\n            console.log(\"incatch\")\n            setError(err.response.data.message)\n        }\n    }\n\n    const divStyle = {\n        color: 'red'\n      }; \n\n    return(\n    <div className =\"login_cen\">\n    <div className =\"logi\">\n            <img className=\"login__logo\" \n            src=\"https://d1a3f4spazzrp4.cloudfront.net/arch-frontend/1.1.1/d1a3f4spazzrp4.cloudfront.net/eats/eats-logo-1a01872c77.svg\"\n            alt=\"\"\n            />\n        <div className =\"login_wc\">\n            <h4>Welcome back</h4>\n            <div className =\"login__container\">\n                <p>Sign in with your email and password</p>\n                <form>\n                    <input type=\"text\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} value={email}></input>\n                    <input type=\"password\" placeholder=\"password\" onChange={(e) => setPwd(e.target.value)} value={pwd}></input>\n                    <button onClick={cuslogin} className=\"login__button\">Next</button>\n                </form>\n                <div className=\"login__text\">\n                    <p>New to Uber?</p>\n                    <Link to=\"/cregister\" className=\"login_ul\"><p className=\"login__create\">Create an account</p></Link>\n                </div>\n                <div style = {divStyle}>\n                    {error && <p> {error} </p>}\n                        \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n    )\n}\n\n\n\nexport default Login;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/userSlice.js",[],["365","366"],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/dish/Editdish.js",["367","368","369","370","371","372","373"],"import React, { useEffect , useState} from \"react\";\nimport axios from 'axios';\nimport M from 'materialize-css';\nimport { Button } from 'react-bootstrap';\nimport {  useParams, useHistory } from 'react-router-dom'\nimport { Formik } from 'formik';\nimport { Menu} from \"@mui/icons-material\";\nimport Showprofile from './Showprofile';\nimport Profilepic from './Profilepic';\nimport Center from \"../Center\";\n//import './Adddish.css'\n\nconst Editdish=()=>{\n  \n    const history = useHistory()\n    const [dishData, setdishData] = useState([])\n    const [restaurants, setRestaurants] = useState([])\n    const [image, setImage] = useState([])\n    const [headbg,setheadbg]=useState('transparent');\n  const [shadow,setshadow]=useState('none');\n  const [inputdisplay,setinputdisplay]=useState(0);\n    const {dishId} = useParams();\n\n  window.addEventListener('scroll',()=>{\n    if(window.scrollY>=50){\n      setheadbg('#FFFFFF');\n      setshadow('rgb(226 226 226) 0px -2px 0px inset');\n      setinputdisplay(1);\n\n    }\n    else{\n      setheadbg('transparent');\n      setshadow('none');\n      setinputdisplay(0);\n\n\n    }\n  })\n\n  useEffect(()=>{\n    axios.post(`/api/restaurant/getd/${dishId}`,{})\n    .then(response => {\n        console.log(\"res\",response);\n        if (response.data.error) {\n            console.log(\"res\",response);\n            M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n        }\n        else {\n\n                setdishData(response.data[0])\n                console.log(response.data)\n                //console.log(\"resss \",customerData);\n                //localStorage.setItem('dish', JSON.stringify(response.data));\n            \n        }\n    })\n     \n  }, []);\n  \n  return(dishData.dname?\n    <div className= \"reshome\" style ={{padding:20}}>\n    <div className=\"header__upper\">\n       <div className=\"header__upperheader\"  style={{backgroundColor:headbg,boxShadow:shadow}}   >\n         <div className=\"header__upperheaderleft\">\n            <Menu />\n            <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                 alt=\"uber eats\" />\n        </div>\n        {/* <div className=\"header__upperheadercenter\"   >\n           <LocationOn />\n           <input type=\"text\" placeholder=\"What are you craving? \" />\n        </div> */}\n\n        <div className=\"header__upperheaderright\">\n             <p> Sign out </p>\n        </div>\n       </div>\n    </div>\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <div className= \"details_img\">\n                <Showprofile />\n                <Profilepic />\n                </div>\n\n                <div className=\"row\" style={{marginTop: 120, alignContent:Center}}>\n\n                {\n                \n                    <Formik\n                        style={{ width: '40%' }}\n                        initialValues={{\n                            dname: dishData.dname,\n                            ingredients: dishData.ingredients,\n                            ddesc : dishData.ddesc,\n                            cuisineId: dishData.cuisineId,\n                            veg: dishData.veg,\n                            nonVeg: dishData.nonVeg,\n                            vegan : dishData.vegan,\n                            categoryId: dishData.categoryId,\n                            Price: dishData.Price,\n                            restaurantId: JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId,\n                            \n                        }}\n                        onSubmit={(values, { setSubmitting, resetForm }) => {\n                            console.log(values)\n                            // if (image) {\n                            //     const data = new FormData()\n                            //     data.append(\"api_key\", '757831828593633');\n                            //     data.append(\"file\", image)\n                            //     data.append(\"upload_preset\", \"l3ihyhha\")\n                            //     data.append(\"cloud_name\", \"du8oeufnp\")\n                            //     fetch(\"https://api.cloudinary.com/v1_1/du8oeufnp/image/upload\", {\n                            //         method: \"post\",\n                            //         body: data\n                            //     }).then(res => res.json())\n                            //         .then(res => {\n                            //             console.log(res + \"Hiii\")\n                            //             setUrl(res.url)\n                            //         })\n                            //         .catch(err => {\n                            //             console.log(err)\n                            //         })\n                            // }\n                            // const dishId = 1\n                            const value={ values: values}\n                            console.log(\"price\",value)\n                            axios.post(`/api/restaurant/editdish/${dishId}`, value )\n                                .then(response => {\n                                    console.log(\"update\",value)\n                                    if (response.data.error) {\n                                        M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n                                    }\n                                    else {\n                                        console.log(\"update1\",response)\n                                        M.toast({ html: \"Updated dish details successfully\", classes: \"#43a047 green darken-1\" })\n                                    }\n                                }).catch(err => {\n                                    console.log(err)\n                                })\n                            history.push('/rhome')\n                        }}>\n                        {({\n                            errors,\n                            handleBlur,\n                            handleChange,\n                            handleSubmit,\n                            isSubmitting,\n                            touched,\n                            values\n                        }) => (\n                            <form id=\"contactForm\" style={{ width: '40%' }} name=\"sentMessage\" onSubmit={handleSubmit}>\n                                <h4 className=\"font-weight-normal\" style={{ fontFamily: 'UberMoveText-Medium,Helvetica,sans-serif' }}> Update details</h4>\n                                <br />\n                                \n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <label style={{ width: \"100%\" }}>Dish Name<input required type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"dname\"  onBlur={handleBlur} onChange={handleChange} value={values.dname} /></label>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n                                        <div className=\"form-group\" >\n                                            <label style={{ width: \"100%\" }}> Ingredients <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"ingredients\" onBlur={handleBlur} onChange={handleChange} value={values.ingredients} /></label>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n                                        <div className=\"form-group\" >\n                                            <label style={{ width: \"100%\" }}>Description <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"ddesc\" onBlur={handleBlur} onChange={handleChange} value={values.ddesc} /></label>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n                                        <div className=\"form-group\" >\n                                            <label style={{ width: \"100%\" }}>Price <input required type=\"number\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"Price\" onBlur={handleBlur} onChange={handleChange} value={values.Price} /></label>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n\n                                        <div className=\"form-group\" >\n                                            <label style={{ width: \"100%\" }}>Cuisine <input className=\"form-control\" /></label>\n                                            <select value={values.cuisineId} id=\"cuisineId\" onBlur={handleBlur} onChange={handleChange} >\n                                            <option value=\"1\" label=\"Chinese\" />\n                                            <option value=\"2\" label=\"Indian\" />\n                                            <option value=\"3\" label=\"Mediterrian\" />\n                                            <option value=\"4\" label=\"Lebanese\" />\n                                            <option value=\"5\" label=\"Italian\" />\n                                            <option value=\"6\" label=\"Thai\" />\n                                            <option value=\"7\" label=\"South Indian\" />\n                                            <option value=\"8\" label=\"Mexican\" />\n                                            <option value=\"9\" label=\"Greek\" />\n                                            <option value=\"10\" label=\"Korean\" />\n                                            </select>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n\n                                        <div className=\"form-group\" >\n                                            <label style={{ width: \"100%\" }}>Is Vegitarian< input type=\"dropdown\" className=\"form-control\"  /></label>\n                                            <select name ='veg' value={values.veg} id=\"veg\" onBlur={handleBlur} onChange={handleChange} >\n                                            <option value=\"Yes\" label=\"Yes\" />\n                                            <option value=\"No\" label=\"No\" />\n                                            </select>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n                                        <div className=\"form-group\" >\n                                            <label style={{ width: \"100%\" }}>Is Non-Vegetarian<input type=\"dropdown\" className=\"form-control\"  /></label>\n                                            <select value={values.nonVeg} id=\"nonVeg\" onBlur={handleBlur} onChange={handleChange}>\n                                            <option value=\"Yes\" label=\"Yes\" />\n                                            <option value=\"No\" label=\"No\" />\n                                            </select>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n                                        <div className=\"form-group\" >\n                                            <label style={{ width: \"100%\" }}>Is Vegan<input type=\"dropdown\" className=\"form-control\" /></label>\n                                            <select value={values.vegan} id=\"vegan\" onBlur={handleBlur} onChange={handleChange} >\n                                            <option value=\"Yes\" label=\"Yes\" />\n                                            <option value=\"No\" label=\"No\" />\n                                            </select>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n                                        <div className=\"form-group\" >\n                                            <label style={{ width: \"100%\" }}>Category < input type=\"dropdown\" className=\"form-control\"  /></label>\n                                            <select name ='categoryId' value={values.categoryId} id=\"categogyId\" onBlur={handleBlur} onChange={handleChange} >\n                                            <option value=\"1\" label=\"Apetizer\" />\n                                            <option value=\"2\" label=\"Salad\" />\n                                            <option value=\"3\" label=\"Main course\" />\n                                            <option value=\"4\" label=\"Desert\" />\n                                            <option value=\"5\" label=\"Beverage\" />\n                                            </select>\n                                            <p className=\"help-block text-danger\"></p>\n                                        </div>\n                                \n                                    </div>\n                                </div>\n                                <Button type=\"submit\" className= \"update_button\"style={{ width: \"100%\", borderRadius: 5 }} >\n                                    Save changes\n                                </Button>\n                                <br />\n                                <br />\n                            </form>\n                            \n                        )}\n                    </Formik>\n                    \n}\n                </div>\n</div>:<h1></h1>\n  )\n}\n\nexport default Editdish;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/UpdateProfile.js",["374","375","376","377","378","379","380"],"import React, { useState, useEffect} from 'react'\n\n\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport M from 'materialize-css'\nimport { Formik } from 'formik';\nimport { Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom';\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector-material-ui-new\";\nimport './UpdateProfile.css'\nimport Showprofile from './Showprofile';\nimport Profilepic from './Profilepic';\nimport { logoutRestaurant } from \"../actions/resActions\";\nimport { useDispatch } from \"react-redux\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst UpdateProfile = () => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [restaurantData, setRestaurantData] = useState([])\n    const [image, setImage] = useState([])\n    const [url, setUrl] = useState([])\n    const [headbg,setheadbg]=useState('transparent');\n    const [shadow,setshadow]=useState('none');\n    const [inputdisplay,setinputdisplay]=useState(0);\n\n\n  window.addEventListener('scroll',()=>{\n    if(window.scrollY>=50){\n      setheadbg('#FFFFFF');\n      setshadow('rgb(226 226 226) 0px -2px 0px inset');\n      setinputdisplay(1);\n\n    }\n    else{\n      setheadbg('transparent');\n      setshadow('none');\n      setinputdisplay(0);\n\n\n    }\n  })\n\n  function signout(){\n    dispatch(logoutRestaurant());\n    localStorage.setItem(\"restaurant\",null);\n    history.push(\"/\")\n  }\n\n    //const { state, dispatch } = useContext(UserContext)\n    useEffect(() => {\n        const restaurantId =JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId;\n        console.log(restaurantId);\n        console.log(JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId)\n\n        axios.post(`/api/restaurant/profile/${restaurantId}`, {\n        }).then(response => {\n            console.log(\"res\",response);\n            if (response.data.error) {\n                console.log(\"res\",response);\n                M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n            }\n            else {\n\n                    setRestaurantData(response.data)\n                    console.log(response.data)\n                    console.log(\"resss \",restaurantData);\n                    localStorage.setItem('restaurant', JSON.stringify(response.data));\n                \n            }\n        })\n    },[]\n        );\n        \n  \n\n    return (restaurantData.restaurantId?\n        <div className=\"update\">\n            <section className=\"section\" id=\"about\">\n                <div className=\"update\" >\n                    \n                    <div className=\"header__upper\">\n                <div className=\"header__upperheader\"  style={{backgroundColor:headbg,boxShadow:shadow}}   >\n                  <div className=\"header__upperheaderleft\">\n                    \n                  <Link to=\"/rhome\">\n                 <img\n                    src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                     alt=\"uber eats\"\n                   />{\" \"}\n                 </Link>\n                 </div>\n                 {/* <div className=\"header__upperheadercenter\"   >\n                 \n                    <input type=\"text\" placeholder=\"What are you craving? \" />\n                 </div> */}\n\n                 <div className=\"header__upperheaderright\" onClick={signout}>\n                      <p> Sign out </p>\n                 </div>\n                </div>\n             </div>\n             <div className= \"details_img\">\n                    <Showprofile />\n                    <Profilepic />\n                    </div>\n                    <br />\n                    <br />\n                \n                    <br />\n                    <br />\n                    <div className=\"row\" style = {{ justifyContent : 'center'}}>\n                    \n                   \n                    {\n                        <Formik\n                            style={{ width: '40%' }}\n                            initialValues={{\n                                rname: restaurantData.rname,\n                                email: restaurantData.email,\n                                mobileNo : restaurantData.mobileNo,\n                                city: restaurantData.city,\n                                stateId: restaurantData.stateId,\n                                countryId: restaurantData.countryId,\n                                fromTime: restaurantData.fromTime,\n                                toTime: restaurantData.toTime,\n                                rdesc: restaurantData.rdesc,\n                                pickup :restaurantData.pickup,\n                                delivery : restaurantData.delivery,\n                                veg : restaurantData.veg,\n                                nonVeg : restaurantData.nonVeg,\n                                vegan : restaurantData.vegan\n                            }}\n                            onSubmit={(values, { setSubmitting, resetForm }) => {\n                                console.log(values)\n                                \n                                const restaurantId = JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId\n                                console.log(restaurantId)\n                                axios.post(`/api/restaurant/updatedetails/`, { restaurantId ,values: values})\n                                    .then(response => {\n                                        console.log(\"update\",response)\n                                        if (response.data.error) {\n                                            M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n                                        }\n                                        else {\n                                            console.log(\"update1\",response)\n                                            toast.success('Updated details successful', {\n                                                position: \"top-right\",\n                                                autoClose: 5000,\n                                                hideProgressBar: true,\n                                                closeOnClick: true,\n                                                pauseOnHover: true,\n                                                draggable: true,\n                                                progress: undefined,\n                                                });\n                                        }\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                               // history.push('/rhome')\n                            }}>\n                            {({\n                                errors,\n                                handleBlur,\n                                handleChange,\n                                handleSubmit,\n                                isSubmitting,\n                                touched,\n                                values\n                            }) => (\n                                <form id=\"contactForm\" style={{ width: '40%' }} name=\"sentMessage\" onSubmit={handleSubmit}>\n                                    <h4 className=\"font-weight-normal\" style={{ fontFamily: 'UberMoveText-Medium,Helvetica,sans-serif' }}> Update Restaurant Information</h4>\n                                    <br />\n                                     \n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group\">\n                                                <label style={{ width: \"100%\",border:\"none\" }}>Restaurant Name<input required style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"rname\" type=\"text\" onBlur={handleBlur} onChange={handleChange} value={values.rname} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}> Email <input required type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"email\" onBlur={handleBlur} onChange={handleChange} value={values.email} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Contact Number <input required type=\"number\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"mobileNo\" onBlur={handleBlur} onChange={handleChange} value={values.mobileNo} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>City <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"city\" onBlur={handleBlur} onChange={handleChange} value={values.city} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Country<CountryDropdown style={{ width: \"100%\" }}value={values.countryId} className=\"form-control\" id=\"countryId\" onBlur={handleBlur} onChange= {handleChange(\"countryId\")} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                            <label>State  <RegionDropdown style={{ width: \"100%\" }} country={values.countryId} value={values.stateId} className=\"form-control\" id=\"stateId\" onBlur={handleBlur} onChange={handleChange(\"stateId\") }/></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Description <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"rdesc\" onBlur={handleBlur} onChange={handleChange} value={values.rdesc} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}> Opens at <input type=\"time\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"toTime\" onBlur={handleBlur} onChange={handleChange} value={values.toTime} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Closes at <input type=\"time\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"fromTime\" onBlur={handleBlur} onChange={handleChange} value={values.fromTime} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                           \n                                            <div className=\"form-group\" >\n                                            \n                                                <label>Pickup <input type=\"dropdown\" className=\"form-control\" /></label>\n                                                <select name= 'pickup' value={values.pickup} id=\"pickup\" onBlur={handleBlur} onChange={handleChange}>\n                                                <option value=\"Yes\" label=\"Yes\" defaultChecked/>\n                                                <option value=\"No\" label=\"No\" />\n                                                </select>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                            \n                                                <label style={{ width: \"100%\" }}> Delivery <input type=\"dropdown\" className=\"form-control\"   /></label>\n                                                <select  name ='delivery' value={values.delivery} id=\"delivery\" onBlur={handleBlur} onChange={handleChange} >\n                                                <option value=\"Yes\" label=\"Yes\" defaultChecked/>\n                                                <option value=\"No\" label=\"No\" />\n                                                </select>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Vegitarian options < input type=\"dropdown\" className=\"form-control\"  /></label>\n                                                <select name ='veg' value={values.veg} id=\"veg\" onBlur={handleBlur} onChange={handleChange} >\n                                                <option value=\"Yes\" label=\"Yes\" defaultChecked/>\n                                                <option value=\"No\" label=\"No\" />\n                                                </select>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Non-Vegetarian options <input type=\"dropdown\" className=\"form-control\"  /></label>\n                                                <select name ='nonVeg' value={values.nonVeg} id=\"nonVeg\" onBlur={handleBlur} onChange={handleChange}>\n                                                <option value=\"Yes\" label=\"Yes\" defaultChecked/>\n                                                <option value=\"No\" label=\"No\" />\n                                                </select>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n\n                                            \n\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Vegan options <input type=\"dropdown\" className=\"form-control\" /></label>\n                                                <select name ='vegan' value={values.vegan} id=\"vegan\" onBlur={handleBlur} onChange={handleChange} >\n                                                <option value=\"Yes\" label=\"Yes\" defaultChecked/>\n                                                <option value=\"No\" label=\"No\" />\n                                                </select>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            \n                                        </div>\n                                    </div>\n                                    <ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n                                    <Button type=\"submit\" className= \"update-button\" style={{ width: \"100%\", borderRadius: 5 }}>\n                                        Save changes\n                                    </Button>\n                                    <br />\n                                    <br />\n                                </form>\n                                \n                            )}\n                        </Formik>\n} \n                    </div>\n                </div>\n            </section>\n        </div>:<h1></h1> \n    )\n}\n\nexport default UpdateProfile;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Resprofile.js",["381","382","383","384","385"],"import React, { useEffect, useState } from \"react\";\nimport Restaurantpic from \"../components/Restaurantpic\";\nimport {\n  useParams,\n  useHistory,\n} from \"react-router-dom\";\nimport ShoppingCartOutlinedIcon from \"@mui/icons-material/ShoppingCartOutlined\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@mui/material/Typography\";\nimport Dish from \"../components/Dishes\";\nimport {\n  LocationOn\n} from \"@mui/icons-material\";\nimport \"./Resprofile.css\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport bcrypt from 'bcryptjs';\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nvar _ = require('lodash');\n\nfunction Resprofile() {\n\n  const history = useHistory();\n  const dispatch= useDispatch();\n  const [restaurant, setRestaurant] = useState([]);\n  const [dishes, setDishes] = useState([]);\n  const [cart, setCart] = useState([JSON.parse(localStorage.getItem(\"cart\"))]);\n  const [headbg, setheadbg] = useState(\"transparent\");\n  const [shadow, setshadow] = useState(\"none\");\n  const [inputdisplay, setinputdisplay] = useState(0);\n  const customerId =  JSON.parse(localStorage.getItem(\"customer\")).customerId;\n  const { restaurantId } = useParams();\n  const custId = String(JSON.parse(localStorage.getItem(\"customer\")).customerId)\n  let invoiceId = bcrypt.hashSync(custId,10);\n\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY >= 50) {\n      setheadbg(\"#FFFFFF\");\n      setshadow(\"rgb(226 226 226) 0px -2px 0px inset\");\n      setinputdisplay(1);\n    } else {\n      setheadbg(\"transparent\");\n      setshadow(\"none\");\n      setinputdisplay(0);\n    }\n  });\n\n\n  const cartorder={\n    customerId,\n    restaurantId: Number(restaurantId),\n    total : _.sumBy(JSON.parse(localStorage.getItem(\"cart\")), (dish) => dish.subtotal),\n    invoiceId,\n    dishes: JSON.parse(localStorage.getItem(\"cart\")) ? JSON.parse(localStorage.getItem(\"cart\")) : []\n  }\n\n  localStorage.setItem('order',JSON.stringify(cartorder))\n\n  const useModal = () => {\n    const [isShowing, setIsShowing] = useState(false);\n\n    function toggle() {\n      setIsShowing(!isShowing);\n    }\n\n    return {\n      isShowing,\n      toggle,\n    };\n  };\n\n  const Modal = ({ isShowing, hide }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <div className=\"modal-overlay\" />\n            <div\n              className=\"modal-wrapper\"\n              aria-modal\n              aria-hidden\n              tabIndex={-1}\n              role=\"dialog\"\n            >\n              <div className=\"modal\">\n                <div style={{ display: \"flex\", alignItems: \"center\",fontSize:30}}>  {JSON.parse(localStorage.getItem(\"cart\"))? JSON.parse(localStorage.getItem(\"cart\"))[0].rname:<p></p>}</div>\n                <div className=\"modal-header\" style={{justifyContent: 'flex-end'}}>\n                  <button\n                    type=\"button\"\n                    className=\"modal-close-button\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={hide}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <Typography component=\"div\" variant=\"h5\"></Typography>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"text.secondary\"\n                  component=\"div\"\n                  style={{paddingBottom: '25px'}}\n                >\n                  <br />\n                  {localStorage.getItem(\"cart\")? \n                  <div >Cart Items\n                  <div style={{display :\"flex\", flexDirection:\"row\"}}> \n                  <div>Dish name  </div> <div style={{paddingLeft:\"85px\"}}>   Quantity </div><div style={{paddingLeft:\"110px\"}}>  Subtotal</div></div></div>\n                  :<p></p>}\n                </Typography>\n\n                 <Grid container spacing={3}>\n                  {localStorage.getItem(\"cart\")?\n                    localStorage.getItem(\"cart\") && JSON.parse(localStorage.getItem(\"cart\")).map((dish) => (\n                      <Grid container item>\n                        <Grid container xs={4}>\n                          {dish.dname}\n                        </Grid>\n                        <Grid container xs={4}>\n                          {dish.quantity}\n                        </Grid>\n                        <Grid container xs={4}>\n                          ${dish.subtotal}\n                        </Grid>\n                      </Grid>\n                    )):<Typography\n                    variant=\"subtitle1\"\n                    color=\"text.secondary\"\n                    component=\"div\"\n                    style={{paddingBottom: '25px'}}\n                  > Cart is empty </Typography>}\n                 <br></br>\n                </Grid>\n                <Box\n                  sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}\n                >\n                  <br></br>\n                  {localStorage.getItem(\"cart\")? <Link to ='/checkout'style={{paddingTop: '40px'}}>\n                  \n                  <Button\n                    onClick={() => {\n                      toggle();\n                    }}\n                    style={{color:'white', backgroundColor:'black', display:'flex',}}\n                  >\n                    GO TO CHECKOUT . ${cartorder.total}\n                  </Button></Link> : <Button disabled\n                    onClick={() => {\n                      toggle();\n                    }}\n                    style={{color:'white', backgroundColor:'black', display:'flex',}}\n                  >\n                    ADD ITEMS \n                  </Button>}\n                  \n                </Box>\n              </div>\n            </div>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  const { isShowing, toggle } = useModal();\n\n  // const Item = styled(Paper)(({ theme }) => ({\n  //   ...theme.typography.body2,\n  //   padding: theme.spacing(2),\n  //   textAlign: \"center\",\n  //   color: theme.palette.text.secondary,\n  // }));\n\n\n\n  useEffect(() => {\n    console.log(restaurantId);\n    getRestaurant();\n    getDishes();\n  }, []);\n\n  const getRestaurant = async () => {\n    //const customerId =  JSON.parse(localStorage.getItem(\"customer\")).customerId;\n\n    await axios\n      .post(`/api/restaurant/profile/${restaurantId}`, {})\n      .then((responseData) => {\n        console.log(\"res\", responseData);\n        if (responseData.data.error) {\n          console.log(\"res\", responseData);\n          // M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n        } else {\n          //setcustomerData(responseData.data)\n          setRestaurant(responseData.data);\n          console.log(\"restaurant\", responseData.data);\n          //console.log(\"resss \",customerData);\n          //localStorage.setItem(\"restaurant\", JSON.stringify(responseData.data));\n        }\n      });\n  };\n\n  const getDishes = async () => {\n    \n\n    await axios\n      .post(`/api/restaurant/getdish/${restaurantId}`, {})\n      .then((responseData) => {\n        console.log(\"res\", responseData);\n        if (responseData.data.error) {\n          console.log(\"res\", responseData);\n          // M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n        } else {\n          //setcustomerData(responseData.data)\n          setDishes(responseData.data);\n          console.log(\" dishes\", responseData.data);\n\n          //console.log(\"resss \",customerData);\n          //localStorage.setItem('dish', JSON.stringify(responseData.data));\n        }\n      });\n  };\n\n    \n  function signout(){\n    dispatch(logout());\n    localStorage.setItem(\"customer\",null);\n    history.push(\"/\")\n  }\n\n  return restaurant ? (\n    <div style={{padding:20}}>\n      <div className=\"header__upper\">\n        <div\n          className=\"header__upperheader\"\n          style={{ backgroundColor: headbg, boxShadow: shadow }}\n        >\n          <div className=\"header__upperheaderleft\">\n            \n            <Link to=\"/chome\">\n              <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />{\" \"}\n            </Link>\n          </div>\n          <div className=\"header__upperheadercenter\"   >\n               <LocationOn />\n               <input type=\"text\" placeholder=\"What are you craving? \" />\n            </div>\n          <div className=\"header__upperheaderright\" onClick={toggle}>\n            <p>\n              {\" \"}\n              <ShoppingCartOutlinedIcon style={{ color: \"black\" }} />\n              <span className=\"empty-message\">\n                {\" \"}\n                {localStorage.getItem(\"cart\")\n                  ? JSON.parse(localStorage.getItem(\"cart\")).length\n                  : \"Your cart is empty\"}\n              </span>{\" \"}\n            </p>\n            <Modal\n              isShowing={isShowing}\n              hide={toggle}\n              style={{ position: \"absolute\", width: \"240px\", height: \"340px\" }}\n            />\n          </div>\n\n          <div className=\"header__upperheaderright\" onClick={signout}>\n            <p> Sign out </p>\n          </div>\n        </div>\n      </div>\n      <br />\n      <br />\n      <br />\n      <br />\n\n      <div>\n        <Restaurantpic imgKey={restaurant.profilepic} name={restaurant.rname} desc={restaurant.rdesc} from={restaurant.fromTime} to={restaurant.toTime}/>\n      </div>\n\n      <div className=\"dish_home\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Grid container spacing={5}>\n            {dishes.map((dish) => (\n              <Grid item xs={6} key={dish.dishId}>\n                <Dish\n                  id={dish.dishId}\n                  dname={dish.dname}\n                  des={dish.ddesc}\n                  ing={dish.ingredients}\n                  price={dish.Price}\n                  imageKey={dish.profilepic}\n                  restaurantId= {restaurantId}\n                  rname={restaurant.rname}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </div>\n    </div>\n  ) : (\n    <h1></h1>\n  );\n}\n\nexport default Resprofile;\n","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/dish/Adddish.js",["386"],"import React, { useEffect, useState } from \"react\";\nimport M from \"materialize-css\";\nimport { Button } from \"react-bootstrap\";\nimport {\n  useHistory,\n} from \"react-router-dom\";\nimport {\n  Menu\n} from \"@mui/icons-material\";\nimport Center from \"../Center\";\nimport axios from 'axios';\n//import './Adddish.css'\n\nconst Adddish = () => {\n  const history = useHistory();\n  //const [dishData, setdishData] = useState([])\n  //const [restaurants, setRestaurants] = useState([])\n  //const [image, setImage] = useState([])\n  const [headbg, setheadbg] = useState(\"transparent\");\n  const [shadow, setshadow] = useState(\"none\");\n  const [inputdisplay, setinputdisplay] = useState(0);\n  const [dname, setdname] = useState();\n  const [ingredients, setingredients] = useState();\n  const [ddesc, setddesc] = useState();\n  const [cuisineId, setcuisineId] = useState(1);\n  const [veg, setveg] = useState(\"Yes\");\n  const [nonVeg, setnonveg] = useState(\"Yes\");\n  const [vegan, setvegan] = useState(\"Yes\");\n  const [categoryId, setcategoryId] = useState(1);\n  const [Price, setPrice] = useState(0);\n  const [restaurantId,setrestaurantId]= useState();\n  \n\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY >= 50) {\n      setheadbg(\"#FFFFFF\");\n      setshadow(\"rgb(226 226 226) 0px -2px 0px inset\");\n      setinputdisplay(1);\n    } else {\n      setheadbg(\"transparent\");\n      setshadow(\"none\");\n      setinputdisplay(0);\n    }\n  });\n useEffect(()=>{\n   setrestaurantId(JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId)\n },[]);\n\n\n  async function dishAdd(event) {\n    event.preventDefault();\n   \n       \n  const dishes = {\n    dname,\n    ingredients,\n    ddesc,\n    cuisineId,\n    veg,\n    nonVeg,\n    vegan,\n    categoryId,\n    Price,\n    restaurantId\n  };\n\n    axios.post(\"/api/restaurant/adddish\", dishes)\n    .then((response) => {\n      console.log(\"update\", response);\n      if (response.data.error) {\n        M.toast({\n          html: response.data.error,\n          classes: \"#c62828 red darken-3\",\n        });\n      } else {\n        console.log(\"update1\", response);\n        M.toast({\n          html: \"Updated dish details successfully\",\n          classes: \"#43a047 green darken-1\",\n        });\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n    history.push(\"/rhome\");\n}\n\n  useEffect(() => {\n    // axios.post(`http://localhost:8081/restaurant/getd/${dishId}`,{})\n    // .then(response => {\n    //     console.log(\"res\",response);\n    //     if (response.data.error) {\n    //         console.log(\"res\",response);\n    //         M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n    //     }\n    //     else {\n    //             setdishData(response.data[0])\n    //             console.log(response.data[0])\n    //             //console.log(\"resss \",customerData);\n    //             localStorage.setItem('dish', JSON.stringify(response.data));\n    //     }\n    // })\n  }, []);\n\n  return (\n    <div className=\"reshome\">\n      <div className=\"header__upper\">\n        <div\n          className=\"header__upperheader\"\n          style={{ backgroundColor: headbg, boxShadow: shadow }}\n        >\n          <div className=\"header__upperheaderleft\">\n            <Menu />\n            <a href=\"/rhome\">\n              <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />\n            </a>\n          </div>\n          {/* <div className=\"header__upperheadercenter\"   >\n           <LocationOn />\n           <input type=\"text\" placeholder=\"What are you craving? \" />\n        </div> */}\n\n          <div className=\"header__upperheaderright\">\n            <p> Sign out </p>\n          </div>\n        </div>\n      </div>\n\n      {/* <div className= \"details_img\" style={{marginTop:100, marginLeft: 20}}>\n                <Showprofile style={{marginTop:150, marginLeft: 20}} />\n                <Profilepic style={{marginTop:150, marginLeft: 20}}/>\n                </div> */}\n\n      <div className=\"row\" style={{ marginTop: 120, alignContent: Center }}>\n        {\n          \n              <form\n                id=\"contactForm\"\n                style={{ width: \"40%\" }}\n                name=\"sentMessage\"\n               \n              >\n                <h4\n                  className=\"font-weight-normal\"\n                  style={{\n                    fontFamily: \"UberMoveText-Medium,Helvetica,sans-serif\",\n                  }}\n                >\n                  {\" \"}\n                  Update details\n                </h4>\n                <br />\n\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Dish Name\n                        <input\n                          required\n                          type=\"text\"\n                          style={{ width: \"100%\", borderRadius: 0 }}\n                          className=\"form-control\"\n                          onChange={(e) => setdname(e.target.value)} value={dname}\n                        />\n                      </label>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Ingredients{\" \"}\n                        <input\n                          type=\"text\"\n                          style={{ width: \"100%\", borderRadius: 0 }}\n                          className=\"form-control\"\n                          onChange={(e) => setingredients(e.target.value)} value={ingredients}\n                        />\n                      </label>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Description{\" \"}\n                        <input\n                          type=\"text\"\n                          style={{ width: \"100%\", borderRadius: 0 }}\n                          className=\"form-control\"\n                          onChange={(e) => setddesc(e.target.value)} value={ddesc}\n                        />\n                      </label>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Price{\" \"}\n                        <input\n                          type=\"number\"\n                          style={{ width: \"100%\", borderRadius: 0 }}\n                          className=\"form-control\"\n                          onChange={\n                            (e) => {console.log(e.target.value); setPrice(e.target.value);}\n                          } value={Price}\n                          defaultValue={0}></input>\n                        \n                      </label>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Cuisine <input className=\"form-control\"  />\n                      </label>\n                      <select onChange={(e) => setcuisineId(e.target.value)} value={cuisineId}\n                              defaultValue={{ label: \"Chinese\", value: \"1\" }}>\n                        <option value=\"1\" label=\"Chinese\" />\n                        <option value=\"2\" label=\"Indian\" />\n                        <option value=\"3\" label=\"Mediterrian\" />\n                        <option value=\"4\" label=\"Lebanese\" />\n                        <option value=\"5\" label=\"Italian\" />\n                        <option value=\"6\" label=\"Thai\" />\n                        <option value=\"7\" label=\"South Indian\" />\n                        <option value=\"8\" label=\"Mexican\" />\n                        <option value=\"9\" label=\"Greek\" />\n                        <option value=\"10\" label=\"Korean\" />\n                      </select>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Is Vegitarian\n                        <input type=\"dropdown\" className=\"form-control\"  />\n                      </label>\n                      <select onChange={(e) => setveg(e.target.value)} value={veg}\n                              defaultValue={{ label: \"Yes\", value: \"Yes\" }} >\n                        <option value=\"Yes\" label=\"Yes\" />\n                        <option value=\"No\" label=\"No\" />\n                      </select>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Is Non-Vegetarian\n                        <input type=\"dropdown\" className=\"form-control\" />\n                      </label>\n                      <select  onChange={(e) => setnonveg(e.target.value)} value={nonVeg} \n                          defaultValue={{ label: \"Yes\", value: \"Yes\" }}>\n                        <option value=\"Yes\" label=\"Yes\" />\n                        <option value=\"No\" label=\"No\" />\n                      </select>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Is Vegan\n                        <input type=\"dropdown\" className=\"form-control\"  />\n                      </label>\n                      <select onChange={(e) => setvegan(e.target.value)} value={vegan}\n                              defaultValue={{ label: \"Yes\", value: \"Yes\" }}>\n                        <option value=\"Yes\" label=\"Yes\" />\n                        <option value=\"No\" label=\"No\" />\n                      </select>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n                    <div className=\"form-group\">\n                      <label style={{ width: \"100%\" }}>\n                        Category{\" \"}\n                        <input type=\"dropdown\" className=\"form-control\"  />\n                      </label>\n                      <select onChange={(e) => setcategoryId(e.target.value)} value={categoryId} \n                              defaultValue={{ label: \"Apetizer\", value: 1 }}>\n                        <option value=\"1\" label=\"Apetizer\" />\n                        <option value=\"2\" label=\"Salad\" />\n                        <option value=\"3\" label=\"Main course\" />\n                        <option value=\"4\" label=\"Desert\" />\n                        <option value=\"5\" label=\"Beverage\" />\n                      </select>\n                      <p className=\"help-block text-danger\"></p>\n                    </div>\n                  </div>\n                </div>\n                <a href=\"/rhome\">\n                  <Button\n                    type=\"submit\"\n                    className=\"update_button\"\n                    style={{ width: \"100%\", borderRadius: 5 }}\n                    onClick={dishAdd} \n                  >\n                    Save changes\n                  </Button>\n                </a>\n                <br />\n                <br />\n              </form>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Adddish;\n","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/CenterBox.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/userSlice.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Profilepic.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Showprofile.js",["387","388","389","390"],"import React, {useState, useEffect} from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport './Showprofile.css'\n\nconst Showprofile = () => {\n    const user = useSelector((state) => state.user);\n    const [key, setKey] = useState();\n    const [images, setImages] = useState();\n    useEffect(() => {\n        const getkey = async () => {\n            try{\n                const cusId = {\n                    customerId : JSON.parse(localStorage.getItem(\"customer\")).customerId\n                }\n                const res = await axios.post(\"/api/key\", cusId)\n                console.log(\"------\",res)\n                setKey(res.data.key)\n                }catch(err){\n                    console.log(err)\n                }\n            } \n            getkey()\n        }, [])\n    return (\n        <div>\n            <div className=\"showProfile\">\n                {key && <img src={`/api/images/${key}`} className=\"showProfile_img\"/>}\n            </div>\n        </div>\n    )\n}\n\nexport default Showprofile;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Showprofile.js",["391","392","393","394","395"],"import React, {useState, useEffect} from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport axios from 'axios';\nimport './Showprofile.css'\n\nconst Showprofile = () => {\n    const user = useSelector((state) => state.user);\n    const [key, setKey] = useState();\n    const [images, setImages] = useState();\n    useEffect(() => {\n        const getkey = async () => {\n            try{\n                const resId = {\n                    restaurantId : JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId\n                }\n                const res = await axios.post(\"/api/restaurant/key\", resId)\n                console.log(\"------\",res)\n                setKey(res.data.key)\n                }catch(err){\n                    console.log(err)\n                }\n            } \n            getkey()\n        }, [])\n    return (\n        <div>\n            <div className=\"showProfile\">\n                {key && <img src={`/api/images/${key}`} className=\"showProfile_img\"/>}\n            </div>\n        </div>\n    )\n}\n\nexport default Showprofile;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/dish/Profilepic.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/dish/Showprofile.js",["396","397","398"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './Showprofile.css'\n\nconst Showprofile = () => {\n    const [key, setKey] = useState();\n    const [images, setImages] = useState();\n    useEffect(() => {\n        const getkey = async () => {\n            try{\n                const resId = {\n                     dishId: JSON.parse(localStorage.getItem(\"dishId\"))\n                     \n                }\n                const res = await axios.post(\"/api/dish/key\", resId)\n                console.log(\"------\",res)\n                setKey(res.data.key)\n                }catch(err){\n                    console.log(err)\n                }\n            } \n            getkey()\n        }, [])\n    return (\n        <div>\n            <div className=\"showProfile\">\n                {key && <img src={`/api/images/${key}`} className=\"showProfile_img\"/>}\n            </div>\n        </div>\n    )\n}\n\nexport default Showprofile;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Sidebar.js",["399"],"import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiAppBar from '@mui/material/AppBar';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  }),\n);\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: 'flex-end',\n}));\n\nexport default function PersistentDrawerLeft() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      \n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\n          >\n            <MenuIcon />\n            \n          </IconButton>\n          <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />\n       \n      \n      <Drawer\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth,\n              boxSizing: \"border-box\",\n            },\n          }}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n        >\n          <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )} \n               <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />\n            </IconButton>\n          </DrawerHeader>\n          <Divider />\n          <Divider />\n          <List>\n          \n\n              <ListItem >\n          \n          <ListItemIcon>\n          <Link to ='./rlogin' style={{color:'black',}}>\n          <AccountBoxIcon />  </Link>  \n          </ListItemIcon> \n          <ListItemText> <Link to ='./rlogin' style={{textDecoration:'none', color:\"black\"}}>  Sign in as restaurant </Link></ListItemText>\n        </ListItem>\n \n\n  <ListItem >\n          \n          <ListItemIcon>\n          <Link to ='./rregister' style={{color:'black',}}>\n          <AccountBoxIcon />  </Link>  \n          </ListItemIcon> \n          <ListItemText> <Link to ='./rregister' style={{textDecoration:'none', color:\"black\"}}>   Add Restaurant </Link></ListItemText>\n        </ListItem>\n  \n          </List>\n        </Drawer>\n      <Main open={open}>\n        <DrawerHeader />\n      </Main>\n    </Box>\n  );\n}","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Restaurants.js",["400","401","402"],"import React, { useEffect, useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../customer/Restaurant.css\";\nimport axios from \"axios\";\n\nconst Restaurants = ({ Name, Opens_at, imageKey, id ,desc}) => {\n  const history = useHistory();\n  const [icon, seticon] = useState([false]);\n  const [favrestaurants, setRestaurants] = useState([]);\n\n  function addfav() {\n    seticon(true);\n    const Req = {\n      customerId: JSON.parse(localStorage.getItem(\"customer\")).customerId,\n      restaurantId: id,\n    };\n    console.log(Req);\n    axios\n      .post(\"/api/customer/addfav\", Req)\n\n      .then((responseData) => {\n        console.log(\"add\", responseData);\n        if (responseData.data.error) {\n          console.log(\"res\", responseData);\n          //M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n        }\n      });\n  }\n\n  function deletefav() {\n    seticon(false);\n    const Req = {\n      customerId: JSON.parse(localStorage.getItem(\"customer\")).customerId,\n      restaurantId: id,\n    };\n    console.log(Req);\n    axios\n      .post(\"/api/customer/deletefav\", Req)\n\n      .then((responseData) => {\n        console.log(\"del\", responseData);\n        if (responseData.data.error) {\n          console.log(\"res\", responseData);\n          //M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n        }\n      });\n  }\n\n  useEffect(() => {\n    const req = {\n      customerId: JSON.parse(localStorage.getItem(\"customer\")).customerId,\n      restaurantId: id,\n    };\n\n    axios\n      .post(\"/api/customer/checkfav\", req)\n      .then((response) => {\n        console.log(\"res\", response);\n        if (response.data === \"success\") {\n          console.log(\"res\", response);\n          // M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n          seticon(true);\n        } else {\n          console.log(response.data);\n          //setRestaurants(response.data)\n          //console.log(\"resss \",customerData);\n          //localStorage.setItem('customer', JSON.stringify(response.data[0]));\n          //M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n          seticon(false);\n        }\n      });\n  }, []);\n\n  // if(favrestaurants.restaurantId===id){\n  //   seticon(true)\n  // }\n  // else {seticon(false)}\n\n  return (\n    <div style={{\n      width: '100%',\n      height: '100%',\n    }}>\n      <Card className=\"cardd_res\" style={{\n        height: '100%'\n      }}>\n        <CardHeader title={Name}/>\n        {imageKey && (\n          <CardMedia\n            onClick={() => history.push(`/resprofile/${id}`)}\n            component=\"img\"\n            height=\"194\"\n            image={`/api/images/${imageKey}`}\n            alt=\"Paella dish\"\n          />\n        )}\n\n        <CardContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n            Opens at: {Opens_at}\n          </Typography>\n          {/* <Typography variant=\"body2\" color=\"text.secondary\">\n            {desc}\n          </Typography> */}\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            <div>\n              {icon ? (\n                <span\n                  onClick={() => {\n                    deletefav();\n                  }}\n                >\n                  {\" \"}\n                  <FavoriteIcon />{\" \"}\n                </span>\n              ) : (\n                <span\n                  onClick={() => {\n                    addfav();\n                  }}\n                >\n                  {\" \"}\n                  <FavoriteBorderIcon />{\" \"}\n                </span>\n              )}\n            </div>\n          </IconButton>\n        </CardActions>\n      </Card>\n    </div>\n  );\n};\n\nexport default Restaurants;\n","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Dishes.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Restaurantpic.js",["403"],"import React from 'react' \nimport \"./Restaurantpic.css\"\n\n\nconst Restaurantpic = ({key, imgKey, name, desc, from, to}) =>{\n    return (\n        <div className = \"cardres\">\n        \n        <div>\n           \n            {imgKey && <img style={{\n    alignSelf: 'center',\n    height: '400px',\n    width: '100%',\n    borderWidth: 1,\n    marginBottom: 50\n    \n  }} src={`/api/images/${imgKey}`} className=\"showProfile_img\"  />}\n             </div>\n    <div className=\"name\">\n        <h1 style={{fontFamily : \"UberMove, sans-serif\"}}>{name}</h1>\n    </div>\n    <div className=\"desc\">\n        <p>{desc}</p>\n        <br></br>\n        <p>Timings: {from} : {to} </p>\n    </div>\n    <div className=\"name\">\n        <h2 >Dishes picked for you</h2>\n    </div>\n    \n    </div>\n    )\n}\n\nexport default Restaurantpic\n","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Profilepic.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Resdishes.js",["404","405"],"import React ,{useState} from 'react' \nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardActions from '@mui/material/CardActions';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { useHistory } from 'react-router-dom'\n\n \n\nfunction Resdishes({id, dname, des, ing, imageKey , price, func}) {\n\n  const [dishes, setDishes] = useState([])\n  const history= useHistory();\n\n\n    return (\n        <div className = 'dishcard' sx={{ display: 'flex' }}>\n            <Card class Name=  \"root\" sx={{ display: 'flex' }} >\n                <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n                <CardContent sx={{ flex: '1 0 auto' }}>\n                <Typography component=\"div\" variant=\"h5\">\n                     {dname}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\n            \n            <br/>\n            Ingredients: {ing} \n          </Typography>\n        </CardContent>\n        <Box sx={{ display: 'flex', alignItems: 'center', pl: 1, pb: 1 }}>\n              Price ${price}\n        </Box>\n      </Box>\n      {imageKey && \n      <CardMedia className= \"media\"\n        component=\"img\"\n        sx={{ width: 151 }}\n        image={`/api/images/${imageKey}`}\n        alt=\"Live from space album cover\"\n      />}\n      <CardActions>\n     \n        <Button size=\"small\"onClick={() => {\n          localStorage.setItem('dishId',JSON.stringify(id))\n          history.push(`/editdish/${id}`);}\n          } >Edit</Button>\n        <Button size=\"small\" onClick= {() => func(id)}>Delete</Button>\n      </CardActions>\n    </Card>\n        </div>\n    )\n}\n\nexport default Resdishes;","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Checkout.js",["406","407"],"import React, { useState, useEffect} from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport M from \"materialize-css\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./UpdateProfile.css\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Checkout = () => {\n  const history= useHistory();\n  const dispatch= useDispatch();\n  const [headbg, setheadbg] = useState(\"transparent\");\n  const [shadow, setshadow] = useState(\"none\");\n  const [currentAddress, setCurrentAddress] = useState(\"\")\n  const [mode, setMode] = useState(\"pickup\")\n  const [savedAddress, setSavedAddress]= useState([]);\n  const [value, setValue] = useState(\"pickup\");\n  const [address, setAddress] = useState({\n    customerId: JSON.parse(localStorage.getItem(\"customer\")).customerId,\n    addline1: \"\",\n    addline2: \"\",\n    city: \"\",\n    state: \"\",\n    zipcode: \"\",\n  });\n\n  // const savedAddress = [\n  //   {\n  //     line1: \"1\",\n  //     line2: \"2\",\n  //     city: \"SJ\",\n  //     state: \"CA\",\n  //     zip: \"231\",\n  //   },\n  //   {\n  //     line1: \"3\",\n  //     line2: \"4\",\n  //     city: \"as\",\n  //     state: \"Aus\",\n  //     zip: \"q2\",\n  //   },\n  //   {\n  //     line1: \"6\",\n  //     line2: \"7\",\n  //     city: \"sf\",\n  //     state: \"sdf\",\n  //     zip: \"234\",\n  //   },\n  // ];\n\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY >= 50) {\n      setheadbg(\"#FFFFFF\");\n      setshadow(\"rgb(226 226 226) 0px -2px 0px inset\");\n    } else {\n      setheadbg(\"transparent\");\n      setshadow(\"none\");\n    }\n  });\n\n  const submitOrder = () => {\n    console.log(\"here\",mode,currentAddress)\n    if(mode==='delivery' && (currentAddress===null || currentAddress===\"\")){\n    console.log(\"here\",mode,currentAddress)\n    \n    toast.error(\"Address required\", {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n      \n  } \n    \n    else{\n    const order = JSON.parse(localStorage.getItem(\"order\"));\n    const restId = JSON.parse(localStorage.getItem(\"rescartid\"))[0];\n    axios\n      .post(\"/api/order/addorder\", {\n        customerId: order.customerId,\n        restaurantId: restId.restaurantId,\n        invoiceId: order.invoiceId,\n        total: order.total,\n        mode: mode\n      })\n      .then((response) => {\n        //console.log(\"res\", response);\n        if (response.data.error) {\n          console.log(\"res\", response);\n          M.toast({\n            html: response.data.error,\n            classes: \"#c62828 red darken-3\",\n          });\n        } else {\n          //setcustomerData(response.data[0])\n          console.log(response.data);\n         \n        }\n        const dishesToPass = [];\n        order.dishes.map((dish) => {\n          console.log(order.invoiceId);\n          dishesToPass.push({\n            invoiceId: order.invoiceId,\n            dishId: dish.dishId,\n            quantity: dish.quantity,\n            price: dish.Price,\n            subtotal: dish.subtotal\n          });\n        });\n        console.log(\"-----------\",dishesToPass);\n        axios.post(\"/api/order/adddetails\", dishesToPass).then((res)=>{\n          console.log(res)\n        })\n      }).then(()=>{\n        \n       \n        toast.success(\"Order placed successfully\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        localStorage.removeItem(\"cart\",null);\n        localStorage.removeItem(\"rescartid\",null);\n        localStorage.removeItem(\"order\",null);\n        const timeout = setTimeout(() => {\n          history.push(\"/chome\");\n        }, 3000);\n        //history.push(\"/chome\")\n      })\n  }};\n\n  const addAddress = () => {\n    console.log(address);\n\n    axios.post(\"/api/customer/addaddress/\",address)\n    .then(response => {\n        \n        if (response.data.error) {\n            //console.log(\"res\",response);\n            M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n        }\n        else {\n                //setSavedAddress(response.data)\n                console.log(response.data)\n        }\n    })\n\n    setAddress({\n      addline1: \"\",\n      addline2: \"\",\n      city: \"\",\n      state: \"\",\n      zipcode: \"\",\n    });\n    setCurrentAddress(`${address.addline1}, ${address.addline2}, ${address.city}, ${address.state} - ${address.zipcode}`)\n  };\n\n  useEffect(() => {\n    const customerId =  JSON.parse(localStorage.getItem(\"customer\")).customerId;\n    axios.post(`/api/customer/fetchaddress/${customerId}`,{})\n    .then(response => {\n        \n        if (response.data.error) {\n            console.log(\"res\",response);\n            M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n        }\n        else {\n                setSavedAddress(response.data)\n                console.log(response.data[0])\n        }\n    })\n  },[]);\n\n  function signout(){\n    dispatch(logout());\n    localStorage.setItem(\"customer\",null);\n    history.push(\"/\")\n  }\n\n  return (\n    <section className=\"section\" id=\"about\">\n      <div className=\"update\">\n        <div className=\"header__upper\">\n          <div\n            className=\"header__upperheader\"\n            style={{ backgroundColor: headbg, boxShadow: shadow }}\n          >\n            <div className=\"header__upperheaderleft\">\n              <Link to=\"/chome\">\n                <img\n                  src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                  alt=\"uber eats\"\n                />{\" \"}\n              </Link>\n            </div>\n\n            {/* <div className=\"header__upperheadercenter\"   >\n \n    <input type=\"text\" placeholder=\"What are you craving? \" />\n </div> */}\n\n            <div className=\"header__upperheaderright\" onClick={signout}>\n              <p> Sign out </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Grid\n        style={{\n          paddingTop: \"100px\",\n          height: \"100vh\",\n        }}\n        container\n        direction={\"row\"}\n      >\n        <Grid\n          container\n          // spacing={3}\n          xs={6}\n          style={{\n            // border: \"1px solid grey\",\n            height: \"100%\",\n            margin: 10\n           \n          }}\n        >\n          <Grid container xs={12} style={{display:'flex', justifyContent:'center',  paddingTop: \"0px\",fontSize:32}}>\n          {JSON.parse(localStorage.getItem(\"cart\"))[0].rname}\n                </Grid>\n          <table\n            style={{\n            width: \"100%\",\n          }}\n          >\n          <tr>\n            <th>Dish Name</th>\n            <th>Quantity</th>\n            <th>Subtotal</th>\n          </tr> \n          {localStorage.getItem(\"cart\") &&\n            JSON.parse(localStorage.getItem(\"cart\")).map((dish) => (\n              <tr>\n                <td>{dish.dname}</td>\n                <td>{dish.quantity}</td>\n                <td>{dish.subtotal}</td>\n              </tr>\n            ))}\n            </table>\n          <Grid container item>\n            <Grid container xs={4}></Grid>\n            <Grid container xs={4}>\n              Total Price\n            </Grid>\n            <Grid container xs={4}>\n              {JSON.parse(localStorage.getItem(\"order\")).total}\n            </Grid>\n          </Grid>\n        \n            Mode of delivery:\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Choose an option</FormLabel>\n              <RadioGroup\n                aria-label=\"gender\"\n                value= {value}\n                name=\"radio-buttons-group\"\n                onChange={(e) => {setMode(e.target.value)\n                setValue(e.target.value)}}\n              >    \n                <FormControlLabel value=\"pickup\" defaultChecked=\"true\" control={<Radio />} label=\"Pick-up\" />\n                <FormControlLabel value=\"delivery\" control={<Radio />} label=\"Delivery\" />\n              </RadioGroup>\n            </FormControl>\n            <ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n<ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n          </Grid>\n        <Grid\n          container\n          spacing={3}\n          xs={6}\n          style={{\n            border: \"1px solid grey\",\n            height: \"100%\",\n          }}\n        >\n          <Grid\n            container\n            item\n            direction=\"column\"\n            style={{\n              padding: \"20px\",\n            }}\n          >\n            Address:\n            <TextField\n              label=\"Address Line 1\"\n              value={address.addline1}\n              onChange={(e) =>\n                setAddress({ ...address, addline1: e.target.value })\n              }\n            />\n            <TextField\n              label=\"Address Line 2\"\n              value={address.addline2}\n              onChange={(e) =>\n                setAddress({ ...address, addline2: e.target.value })\n              }\n            />\n            <TextField\n              label=\"City\"\n              value={address.city}\n              onChange={(e) => setAddress({ ...address, city: e.target.value })}\n            />\n            <TextField\n              label=\"State\"\n              value={address.state}\n              onChange={(e) =>\n                setAddress({ ...address, state: e.target.value })\n              }\n            />\n            <TextField\n              label=\"Zip Code\"\n              value={address.zipcode}\n              onChange={(e) => setAddress({ ...address, zipcode: e.target.value })}\n            />\n            <br />\n            <button\n              onClick={addAddress}\n              style={{\n                width: \"fill-content\",\n              }}\n            >\n              Add address\n            </button>\n          </Grid>\n\n          <Grid\n            container\n            item\n            direction=\"column\"\n            style={{\n              padding: \"40px 20px\",\n            }}\n          >\n            Saved Address:\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Choose from existing address</FormLabel>\n              <RadioGroup\n                aria-label=\"gender\"\n                defaultValue=\"female\"\n                name=\"radio-buttons-group\"\n                onChange={(e) => setCurrentAddress(e.target.value)}\n              >\n                  {savedAddress.map((address) => \n                  <FormControlLabel\n                  value={`${address.addline1}, ${address.addline2}, ${address.city}, ${address.state} - ${address.zipcode}`}\n                  control={<Radio />}\n                  label={`${address.addline1}, ${address.addline2}, ${address.city}, ${address.state} - ${address.zipcode}`}\n                />)}\n              </RadioGroup>\n            </FormControl>\n          </Grid>\n\n          <Grid\n            container\n            item\n            direction=\"column\"\n            style={{\n              padding: \"40px 20px\",\n            }}\n          >\n              Selected Address : {currentAddress}\n          </Grid>\n\n          <Grid\n            container\n            item\n            style={{\n              height: \"fit-content\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <button style={{color:'white', backgroundColor:'black',paddingLeft:50,paddingRight:50, fontSize:20}}onClick={submitOrder}>Place Order</button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </section>\n  );\n};\nexport default Checkout;\n","/Users/gunjalgupta/Desktop/ubereatss/frontend/src/customer/Pastorders.js",["408","409","410","411","412"],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/features/userReducer.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/features/restaurantReducer.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/globalStore/reducer.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/actions/userActions.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/actions/resActions.js",[],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/AllOrders.js",["413","414","415","416","417","418","419","420","421","422","423","424","425"],"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/restaurant/Cusprofile.js",["426","427"],"import React, { useEffect , useState} from \"react\";\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport { useDispatch } from \"react-redux\";\nimport { logoutRestaurant } from \"../actions/resActions\";\nimport { useParams,useHistory } from 'react-router-dom'\n\nconst Cusprofile=()=>{\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [headbg,setheadbg]=useState('transparent');\n    const [shadow,setshadow]=useState('none');\n    const { customerId } = useParams();\n    const [customer,setCustomerData]=useState({});\n    \n  \n  \n    window.addEventListener('scroll',()=>{\n      if(window.scrollY>=50){\n        setheadbg('#FFFFFF');\n        setshadow('rgb(226 226 226) 0px -2px 0px inset');\n      \n  \n      }\n      else{\n        setheadbg('transparent');\n        setshadow('none');\n  \n      }\n    })\n\n    function signout(){\n        dispatch(logoutRestaurant());\n        localStorage.setItem(\"restaurant\",null);\n        history.push(\"/\")\n      }\n\n      useEffect( () => {\n\n        axios.get(`/api/customerprofile/${customerId}`,{})\n        .then(response => {\n            console.log(\"res\",response);\n            if (response.data.error) {\n                //M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n            }\n            else {\n\n                    setCustomerData(response.data[0])\n                    console.log(response.data[0])\n                \n            }\n        })     \n    }, []\n        );\n\n    return(\n        <div>\n        <div className=\"header__upper\">\n           <div className=\"header__upperheader\"  style={{backgroundColor:headbg,boxShadow:shadow}}   >\n             <div className=\"header__upperheaderleft\">\n                \n                <Link to='/rhome'>\n                <img\n                    src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                     alt=\"uber eats\" /></Link>\n            </div>\n            {/* <div className=\"header__upperheadercenter\"   >\n               <LocationOn />\n               <input type=\"text\" placeholder=\"What are you craving? \" />\n            </div> */}\n            <div className=\"header__upperheadercenter\">\n           \n            <input\n              type=\"text\"\n              placeholder=\"What are you craving? \"\n              \n            />\n          </div>\n            <div className=\"header__upperheaderright\" onClick={signout}>\n                 <p> Sign out </p>\n            </div>\n            {/* <div className=\"header__upperheaderright\">\n                 <p> Add dishes </p>\n            </div> */}\n           </div>\n        </div>\n        <div style={{\n   alignSelf: 'center',\n   justifyContent: 'center',\n   display:'flex',\n   alignContent:'center',}}>\n           \n           {customer.profilepic && <img style={{\n  \n \n   \n   borderWidth: 1,\n   marginBottom: 50,\n   paddingTop : 100,\n   \n   \n }} src={`/api/images/${customer.profilepic}`} className=\"showProfile_img\"  />}\n            </div>\n            <div className=\"name\" style={{\n   alignSelf: 'center',\n   justifyContent: 'center',\n   display:'flex',\n   alignContent:'center',}}>\n        <h1 style={{fontFamily : \"UberMove, sans-serif\"}}>{customer.cname}</h1>\n    </div>\n    <div className=\"desc\" style={{\n//    alignSelf: 'center',\n//    justifyContent: 'center',\n//    display:'flex',\n//    flexDirection:'column',\n//    alignItems:'center',\n//    alignContent:'center',\n   fontSize: 16,\n   marginLeft: '38%'}}>\n        \n        <p>Nickname: {customer.nickname} </p>\n        <br></br>\n        <p>About: {customer.about}</p>\n        <br></br>\n        <p>Date of birth: {customer.DOB?customer.DOB.substr(0,10):customer.DOB} </p>\n        <br></br>\n        <p>Contact information: </p>\n        <p style={{paddingLeft:45}}>         Email: {customer.email} </p>\n        <p style={{paddingLeft:45}}>         Contact number: {customer.mobileNo} </p>\n        <br></br>\n        <p>Location: {customer.city}, {customer.stateId}, {customer.countryId} </p>\n    </div>\n        </div>\n    )\n}\nexport default Cusprofile;","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/index.js",[],["428","429"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/App.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/globalStore/reducer.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/Header.js",["430"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/Center.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/Footer.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Register.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Login.js",["431"],"import React, {useState} from 'react';\nimport './Login.css';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { loginRestaurant } from '../actions/resActions';\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction Login() {\n\n    const dispatch = useDispatch();\n    const [email , setEmail ] = useState(\"\");\n    const [pwd , setPwd ] = useState(\"\");\n    const [error , setError] = useState(\"\");\n    const history = useHistory();\n    \n    async function cuslogin(event) {\n        event.preventDefault();\n        try {\n            const loginAdmin = {\n                email,\n                pwd,\n            };\n            console.log(\"------\",loginAdmin)\n            console.log(\"local\", localStorage.getItem('token'))\n            const res = await axios.post(\"/restaurant/api/login\",loginAdmin);\n                localStorage.setItem('restaurant', JSON.stringify(res.data));\n                console.log(\"response\",res);\n                console.log(\"data\",res.data);\n        \n                localStorage.setItem('token', res.data.token);\n            if(res.status == 200) {\n                dispatch(loginRestaurant({\n                    email: res.data.email,\n                    restaurantId: res.data.restaurantId,\n                    name: res.data.name,\n                    loggedIn: true, \n                }))\n              history.push(\"/rhome\")\n            }\n            //console.log(\"response\", res);\n        }catch(err){\n            console.log(err);\n            console.log(err.response);\n            console.log(err.response.data)\n            console.log(\"incatch\")\n            setError(err.response.data.message)\n        }\n    }\n\n    const divStyle = {\n        color: 'red'\n      }; \n\n    return(\n    <div className =\"login_cen\">\n    <div className =\"logi\">\n            <img className=\"login__logo\" \n            src=\"https://d1a3f4spazzrp4.cloudfront.net/arch-frontend/1.1.1/d1a3f4spazzrp4.cloudfront.net/eats/eats-logo-1a01872c77.svg\"\n            alt=\"\"\n            />\n        <div className =\"login_wc\">\n            <h4>Welcome back</h4>\n            <div className =\"login__container\">\n                <p>Sign in with your email and password</p>\n                <form>\n                    <input type=\"text\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} value={email}></input>\n                    <input type=\"password\" placeholder=\"password\" onChange={(e) => setPwd(e.target.value)} value={pwd}></input>\n                    <button onClick={cuslogin} className=\"login__button\">Next</button>\n                </form>\n                <div className=\"login__text\">\n                    <p>New to Uber?</p>\n                    <Link to=\"/rregister\" className=\"login_ul\"><p className=\"login__create\">Create an account</p></Link>\n                </div>\n                <div style = {divStyle}>\n                    {error && <p> {error} </p>}\n                        \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n    )\n}\n\n\n\nexport default Login;","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/UpdateProfile.js",["432","433","434","435","436","437","438","439"],"import React, { useState, useEffect } from 'react'\n\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport M from 'materialize-css'\nimport { Formik } from 'formik';\nimport { Button } from 'react-bootstrap'\nimport {  useHistory } from 'react-router-dom'\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector-material-ui-new\";\nimport './UpdateProfile.css'\nimport Showprofile from './Showprofile';\nimport Profilepic from './Profilepic';\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n//import \"materialize-css/dist/css/materialize.min.css\";\n\nconst UpdateProfile = () => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [customerData, setcustomerData] = useState([])\n    const [image, setImage] = useState([])\n    const [url, setUrl] = useState([])\n    const [dob, setDob] = useState([])\n    const [headbg,setheadbg]=useState('transparent');\n    const [shadow,setshadow]=useState('none');\n    const [inputdisplay,setinputdisplay]=useState(0);\n\n\n  window.addEventListener('scroll',()=>{\n    if(window.scrollY>=50){\n      setheadbg('#FFFFFF');\n      setshadow('rgb(226 226 226) 0px -2px 0px inset');\n      setinputdisplay(1);\n\n    }\n    else{\n      setheadbg('transparent');\n      setshadow('none');\n      setinputdisplay(0);\n\n\n    }\n  })\n\n\n  function signout(){\n    dispatch(logout());\n    localStorage.setItem(\"customer\",null);\n    history.push(\"/\")\n  }\n\n    useEffect( () => {\n        const customerId =  JSON.parse(localStorage.getItem(\"customer\")).customerId;\n\n        axios.get(`/customer/api/profile/${customerId}`,{})\n        .then(response => {\n            console.log(\"res\",response);\n            if (response.data.error) {\n                console.log(\"res\",response);\n                M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n            }\n            else {\n\n                    setcustomerData(response.data)\n                    console.log(response.data)\n                    //console.log(\"resss \",customerData);\n                    localStorage.setItem('customer', JSON.stringify(response.data));\n\n                    setDob((customerData.DOB == null )? customerData.DOB : customerData.DOB.substr(0,10));\n                \n            }\n        })\n       \n            // console.log(\"res\",response);\n            // if (response.data.error) {\n            //     console.log(\"res\",response.data[0]);\n            //    // M.toast({ html: response.data[0].error, classes: \"#c62828 red darken-3\" })\n            // }\n        \n            \n    }, []\n        );\n\n\nreturn (customerData.email?\n   \n    \n                    <section className=\"section\" id=\"about\">\n                <div className=\"update\" >\n                   \n                    <div className=\"header__upper\">\n                <div className=\"header__upperheader\"  style={{backgroundColor:headbg,boxShadow:shadow}}   >\n                 \n                  <div className=\"header__upperheaderleft\">\n                  <Link to = \"/chome\">\n                     <img\n                         src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                          alt=\"uber eats\" />  </Link>\n                 </div>\n                \n                 {/* <div className=\"header__upperheadercenter\"   >\n                 \n                    <input type=\"text\" placeholder=\"What are you craving? \" />\n                 </div> */}\n\n                 <div className=\"header__upperheaderright\"  onClick={signout}>\n                      <p> Sign out </p>\n                 </div>\n                </div>\n             </div>\n                   \n                    <br />\n                    <br />\n                    <div className= \"details_img\">\n                    <Showprofile />\n                    <Profilepic />\n                    </div>\n                    <div className=\"row\" >\n                    \n                   \n                    {\n                        \n                    \n                        <Formik\n                            style={{ width: '40%' }}\n                            initialValues={{\n                                cname: customerData.cname,\n                                email: customerData.email,\n                                mobileNo : customerData.mobileNo,\n                                city: customerData.city,\n                                stateId: customerData.stateId,\n                                countryId: customerData.countryId,\n                                \n                                DOB: customerData.DOB?customerData.DOB.substr(0,20):null,\n                                nickname: customerData.nickname,\n                                about: customerData.about,\n                                \n                            }}\n                            onSubmit={(values, { setSubmitting, resetForm }) => {\n                                console.log(values)\n                                // if (image) {\n                                //     const data = new FormData()\n                                //     data.append(\"api_key\", '757831828593633');\n                                //     data.append(\"file\", image)\n                                //     data.append(\"upload_preset\", \"l3ihyhha\")\n                                //     data.append(\"cloud_name\", \"du8oeufnp\")\n                                //     fetch(\"https://api.cloudinary.com/v1_1/du8oeufnp/image/upload\", {\n                                //         method: \"post\",\n                                //         body: data\n                                //     }).then(res => res.json())\n                                //         .then(res => {\n                                //             console.log(res + \"Hiii\")\n                                //             setUrl(res.url)\n                                //         })\n                                //         .catch(err => {\n                                //             console.log(err)\n                                //         })\n                                // }\n                                const customerId = JSON.parse(localStorage.getItem(\"customer\")).customerId\n                                console.log(customerId)\n                                axios.post(`/customer/api/profile/updatedetails/`, { customerId ,values: values})\n                                    .then(response => {\n                                        console.log(\"update\",response)\n                                        if (response.data.error) {\n                                            M.toast({ html: response.data.error, classes: \"#c62828 red darken-3\" })\n                                        }\n                                        else {\n                                            toast.success('Updated details successful', {\n                                                position: \"top-right\",\n                                                autoClose: 5000,\n                                                hideProgressBar: true,\n                                                closeOnClick: true,\n                                                pauseOnHover: true,\n                                                draggable: true,\n                                                progress: undefined,\n                                                });\n                                            \n                                        }\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                //history.push('/chome')\n                            }}>\n                            {({\n                                errors,\n                                handleBlur,\n                                handleChange,\n                                handleSubmit,\n                                isSubmitting,\n                                touched,\n                                values\n                            }) => (\n                                <form id=\"contactForm\" style={{ width: '40%' }} name=\"sentMessage\" onSubmit={handleSubmit}>\n                                    <h4 className=\"font-weight-normal\" style={{ fontFamily: 'UberMoveText-Medium,Helvetica,sans-serif' }}> Update details</h4>\n                                    <br />\n                                    \n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <div className=\"form-group\">\n                                                <label style={{ width: \"100%\" }}>Customer Name<input required type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"cname\"  onBlur={handleBlur} onChange={handleChange} value={values.cname} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}> Email <input required type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"email\" onBlur={handleBlur} onChange={handleChange} value={values.email} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Contact Number <input required type=\"number\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"mobileNo\" onBlur={handleBlur} onChange={handleChange} value={values.mobileNo} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>City <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"city\" onBlur={handleBlur} onChange={handleChange} value={values.city} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Country<CountryDropdown style={{ width: \"100%\" }}value={values.countryId} className=\"form-control\" id=\"countryId\" onBlur={handleBlur} onChange= {handleChange(\"countryId\")} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                            <label>State  <RegionDropdown style={{ width: \"100%\" }} country={values.countryId} value={values.stateId} className=\"form-control\" id=\"stateId\" onBlur={handleBlur} onChange={handleChange(\"stateId\") }/></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Description <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"about\" onBlur={handleBlur} onChange={handleChange} value={values.about} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Date of birth <input type=\"date\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"DOB\" onBlur={handleBlur} onChange={handleChange} value={values.DOB} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <div className=\"form-group\" >\n                                                <label style={{ width: \"100%\" }}>Nickname <input type=\"text\" style={{ width: \"100%\", borderRadius: 0 }} className=\"form-control\" id=\"nickname\" onBlur={handleBlur} onChange={handleChange} value={values.nickname} /></label>\n                                                <p className=\"help-block text-danger\"></p>\n                                            </div>\n                                            <ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n                                    \n                                        </div>\n                                    </div>\n                                    <Button type=\"submit\" className= \"update_button\"style={{ width: \"100%\", borderRadius: 5 }} >\n                                        Save changes\n                                    </Button>\n                                    <br />\n                                    <br />\n                                </form>\n                                \n                            )}\n                        </Formik>\n                        \n}\n                    </div>\n                </div>\n            </section>:<h1></h1> \n        \n\n\n    // <form onSubmit={submit}>\n    //   <input\n    //     type=\"text\"\n    //     name=\"user name \"\n    //     value={customerData.cname}\n    //     onChange={e => setUser({ ...user, name: e.target.value })}\n    //   />\n    //   {user.errors.name && <p>{user.errors.name}</p>}\n\n    //   <input\n    //     type=\"email\"\n    //     name=\"user[email]\"\n    //     value={user.email}\n    //     onChange={e => setUser({ ...user, email: e.target.value })}\n    //   />\n    //   {user.errors.name && <p>{user.errors.name}</p>}\n\n    //   <input type=\"submit\" name=\"Sign Up\" />\n    // </form>\n          \n  )\n}\n  export default UpdateProfile;","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Login.js",["440"],"import React, {useState} from 'react';\nimport './Login.css';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/userActions';\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction Login() {\n\n    const dispatch = useDispatch();\n    const [email , setEmail ] = useState(\"\");\n    const [pwd , setPwd ] = useState(\"\");\n    const [error , setError] = useState(\"\");\n    const history = useHistory();\n    \n    async function cuslogin(event) {\n        event.preventDefault();\n        try {\n            const loginAdmin = {\n                email,\n                pwd,\n            };\n            console.log(\"------\",loginAdmin)\n            console.log(\"local\", localStorage.getItem('token'))\n            const res = await axios.post(\"/customer/api/login\",loginAdmin)\n            console.log(\"------\",res.status)\n        localStorage.setItem('customer', JSON.stringify(res.data));\n        localStorage.setItem('token', res.data.token);\n        if(res.status == 200) {\n            dispatch(login({\n                email: res.data.email,\n                customerId: res.data.customerId,\n                name: res.data.name,\n                loggedIn: true, \n            }))\n          history.push(\"/chome\")\n            \n            \n            }\n        }\n            //console.log(\"response\", res);\n        catch(err){\n            console.log(\"error\",err.response.data.message);\n            console.log(\"incatch\")\n            setError(err.response.data.message)\n        }\n    }\n\n    const divStyle = {\n        color: 'red'\n      }; \n\n    return(\n    <div className =\"login_cen\">\n    <div className =\"logi\">\n            <img className=\"login__logo\" \n            src=\"https://d1a3f4spazzrp4.cloudfront.net/arch-frontend/1.1.1/d1a3f4spazzrp4.cloudfront.net/eats/eats-logo-1a01872c77.svg\"\n            alt=\"\"\n            />\n        <div className =\"login_wc\">\n            <h4>Welcome back</h4>\n            <div className =\"login__container\">\n                <p>Sign in with your email and password</p>\n                <form>\n                    <input type=\"text\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} value={email}></input>\n                    <input type=\"password\" placeholder=\"password\" onChange={(e) => setPwd(e.target.value)} value={pwd}></input>\n                    <button onClick={cuslogin} className=\"login__button\">Next</button>\n                </form>\n                <div className=\"login__text\">\n                    <p>New to Uber?</p>\n                    <Link to=\"/cregister\" className=\"login_ul\"><p className=\"login__create\">Create an account</p></Link>\n                </div>\n                <div style = {divStyle}>\n                    {error && <p> {error} </p>}\n                        \n                </div>\n            </div>\n        </div>\n    </div>\n    </div>\n    )\n}\n\nexport default Login;","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/AllOrders.js",["441","442","443","444","445","446","447","448","449","450","451","452","453"],"import React, { useEffect , useState} from \"react\";\nimport MaterialTable from \"material-table\";\nimport { forwardRef } from 'react';\nimport { Link } from 'react-router-dom'\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { useDispatch } from \"react-redux\";\nimport { logoutRestaurant } from \"../actions/resActions\";\nimport {  useHistory } from 'react-router-dom'\nimport axios from \"axios\";\nimport LaunchIcon from '@mui/icons-material/Launch';\n\n\n\n\nfunction AllOrders() {\n    const tableIcons = {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n      };\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [data, setData] = useState([])\n    const [status, setStatus] = useState([])\n\n    const [headbg,setheadbg]=useState('transparent');\n    const [shadow,setshadow]=useState('none');\n    const [deliveryData, setDeliveryData] = useState([]);\n    const [pickupData, setPickupData] = useState([]);\n    const [lookup, setLookup] = useState({  \"placed\": 'Placed', \"Preparing\": 'Preparing', \"On the way\": \"On the way\", \"Delivered\":\"Delivered\"  });\n\n\n\n  window.addEventListener('scroll',()=>{\n    if(window.scrollY>=50){\n      setheadbg('#FFFFFF');\n      setshadow('rgb(226 226 226) 0px -2px 0px inset');\n\n    }\n    else{\n      setheadbg('transparent');\n      setshadow('none');\n     \n\n\n    }\n  })\n\n  function signout(){\n    dispatch(logoutRestaurant());\n    localStorage.setItem(\"restaurant\",null);\n    history.push(\"/\")\n  }\n\n  useEffect(()=>{\n    const restaurantId =  JSON.parse(localStorage.getItem(\"restaurant\")).restaurantId;\n    axios\n    .post(`/api/order/getresorders/${restaurantId}`, {})\n    .then((responseData) => {\n      console.log(\"res\", responseData);\n      if (responseData.data.error) {\n        console.log(\"res\", responseData);\n        // M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n      } else {\n          const tempdatadel = []\n          const tempdatapic = []\n          responseData.data.forEach((row)=>{\n            if(row.mode==\"delivery\"){\n                if(row.ostatus==\"Order received\" || row.ostatus==\"Preparing\" || row.ostatus==\"On the way\")\n                {\n                    tempdatadel.push({...row, status: \"New order\"})\n                }\n                else if(row.ostatus==\"Delivered\"){\n                    tempdatadel.push({...row, status: \"Delivered order\"})\n                }\n                else if(row.ostatus==\"Cancelled\"){\n                    \n                    tempdatadel.push({...row, status: \"Cancelled order\"})\n                }\n                \n            }\n            \n            else {\n                if(row.ostatus==\"Order received\" || row.ostatus==\"Preparing\" || row.ostatus==\"Pickup ready\")\n                {\n                    \n                    tempdatapic.push({...row, status: \"New order\"})\n                }\n                else if(row.ostatus==\"Picked up\"){\n                    tempdatapic.push({...row, status: \"Delivered order\"})\n                }\n                else if(row.ostatus==\"Cancelled\"){\n                    tempdatapic.push({...row, status: \"Cancelled order\"})\n                }\n                \n            }\n            console.log(\"here\",row)\n        })\n    \n        //setcustomerData(responseData.data)\n        setDeliveryData(tempdatadel)\n        setPickupData(tempdatapic)\n        setData(tempdatadel);\n        console.log(\"restaurant\", responseData.data);\n        //console.log(\"resss \",customerData);\n        //localStorage.setItem(\"restaurant\", JSON.stringify(responseData.data));\n      }\n    })\n\n  },[status])\n  \n    const [columns, setColumns] = useState();\n\n    // if mode == delivery then lookup:  { \"placed\": 'Placed', \"Preparing\": 'Preparing', on the way, delivered },\n    //else lookup:  { \"placed\": 'Placed', \"Preparing\": 'Preparing', pickup ready, picked up },\n  \n    const saveStatus = async (ostatus,orderId) =>{\n        const req = { ostatus: ostatus,\n        orderId: orderId}\n        //const restaurantId =1\n        await axios.post(\"/api/order/status\",req)\n        .then(responseData => {\n            if (responseData.data.error) {\n                //console.log(\"res\",responseData);\n               // M.toast({ html: responseData.data.error, classes: \"#c62828 red darken-3\" })\n            }\n            else {\n              //console.log(\" dishes\",responseData.data)\n                    //setcustomerData(responseData.data)\n                    //setDishes(responseData.data)\n                    \n                    //console.log(\"resss \",customerData);\n                    //localStorage.setItem('dish', JSON.stringify(responseData.data));\n                \n            }\n        })\n  \n    }\n  \n    return (\n       <div>\n        <div className=\"header__upper\">\n           <div className=\"header__upperheader\"  style={{backgroundColor:headbg,boxShadow:shadow}}   >\n             <div className=\"header__upperheaderleft\">\n             <Link to='/rhome'>\n                <img\n                    src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                     alt=\"uber eats\" /></Link>\n            </div>\n            {/* <div className=\"header__upperheadercenter\"   >\n               <LocationOn />\n               <input type=\"text\" placeholder=\"What are you craving? \" />\n            </div> */}\n            \n            <div className=\"header__upperheaderright\" onClick={signout}>\n                 <p> Sign out </p>\n            </div>\n            {/* <div className=\"header__upperheaderright\">\n                 <p> Add dishes </p>\n            </div> */}\n           </div>\n        </div> \n      <div style={{paddingTop:90, paddingLeft:20, paddingRight:20}}>\n\n          <button onClick={() => {\n              setData(pickupData)\n             setLookup({ \"Order received\": 'Order received', \"Preparing\": 'Preparing', \"Pickup ready\": \"Pickup ready\", \"Picked up\": \"Picked up\" })}\n          }>Pickup orders</button>\n          <button onClick={() => {\n              setData(deliveryData)\n            \n              setLookup({  \"Order received\": 'Order received', \"Preparing\": 'Preparing', \"On the way\": \"On the way\", \"Delivered\":\"Delivered\"  })}}>\n                  Delivery orders</button>\n      <MaterialTable\n        icons={tableIcons}\n        title=\"Orders\"\n        \n        columns={[\n            { title: 'Invoice number', field: 'orderId' ,editable: 'never', grouping: false },\n            { title: 'Customer name', field: 'cname' ,editable: 'never' },\n            { title: 'Email', field: 'email', initialEditValue: 'initial edit value' , editable: 'never', grouping: false },\n            { title: 'Contact Number', field: 'mobileNo', type: 'numeric' , editable: 'never', grouping: false },\n            { title: 'Mode of delivery', field: 'mode' , editable: 'never', grouping: false },\n            { title: 'Status', field: \"status\" , editable: 'never'},\n            {\n              title: 'Order Status',\n              field: 'ostatus',\n              lookup: lookup,\n            },\n            \n          ]}\n        data={data}\n        actions={[\n          {\n            icon: () => <LaunchIcon />,\n            tooltip: 'See customer',\n            onClick: (event, rowData) => \n            history.push(`/cusprofile/${rowData.customerId}`)\n          }\n        ]}\n        cellEditable={{\n          onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\n            return new Promise((resolve, reject) => {\n              console.log('newValue: ' + newValue);\n              console.log('newValue: ' + rowData.orderId);\n              setStatus(newValue);\n              saveStatus(newValue, rowData.orderId)\n              setTimeout(resolve, 1000);\n            });\n          }\n        }}\n        options={{\n            grouping: true\n          }}\n      />\n      </div> \n      </div>\n    )\n  }\n  \n  export default AllOrders;","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/UpdateProfile.js",["454","455","456","457","458","459","460"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Cusprofile.js",["461","462"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Register.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Checkout.js",["463","464"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Favourite.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Pastorders.js",["465","466","467","468","469"],"import React, { useState, useEffect} from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Grid} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./UpdateProfile.css\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport './Pastorders.css'\nimport { Typography } from \"@material-ui/core\";\nimport ReactDOM from \"react-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport FormGroup from '@mui/material/FormGroup';\nimport Checkbox from '@mui/material/Checkbox';\nimport { LocationOn} from \"@mui/icons-material\";\n\n\nconst Pastorders = () => {\n  const history= useHistory();\n  const dispatch= useDispatch();\n  const [headbg, setheadbg] = useState(\"transparent\");\n  const [shadow, setshadow] = useState(\"none\");\n  const [mode, setMode] = useState(\"pickup\")\n  // const [pickup, setPickup] = useState()\n  // const [delivery, setDelivery] = useState()\n  const [orders, setOrders] = useState([\n    {\n      restaurantName: \"restaurantName\",\n      date: \"date\",\n      total: \"total\",\n    },\n  ]);\n  const [orderdetails, setOrderdetails] = useState([])\n  const [filteredOrders, setFilteredOrders] = useState(orders);\n  const [filters, setFilters] = useState([]);\n  const [pd, updatePD] = useState({\n    delivery: true,\n    pickup: true,\n  })\n\n  useEffect(() => {\n    axios\n      .post(\"/api/order/getcusorder\", {\n        customerId: JSON.parse(localStorage.getItem(\"customer\")).customerId,\n      })\n      .then((res) => {\n        console.log(res);\n        setOrders(res.data)\n        \n      })\n\n  }, []);\n\n  const getdetails= (invoiceId)=>{\n    axios\n    .post(\"/api/order/getcusdetail\", {\n      customerId: JSON.parse(localStorage.getItem(\"customer\")).customerId,\n      invoiceId : invoiceId,\n    })\n    .then((res) => {\n      console.log(res);\n      setOrderdetails(res.data)\n    })\n  }\n    \n  \n\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY >= 50) {\n      setheadbg(\"#FFFFFF\");\n      setshadow(\"rgb(226 226 226) 0px -2px 0px inset\");\n     \n    } else {\n      setheadbg(\"transparent\");\n      setshadow(\"none\");\n   \n    }\n  });\n\n  const [status, setStatus] = useState(\"\");\n  \n  useEffect(() => {\n    if(pd.pickup===true && pd.delivery===false){\n      console.log(\"pi\")\n      setFilters([\"Order received\", \"Preparing\", \" Pickup Ready\", \"Picked up\"])\n      console.log(filters)\n    }\n    else if(pd.delivery===true && pd.pickup===false){\n      console.log(\"de\")\n      setFilters([\"Order received\", \"Preparing\", \"On the way\", \"Delivered\"])\n    }\n    else{\n      \n      setFilters([\"All orders\",\"Order received\", \"Preparing\", \"On the way\", \"Delivered\", \" Pickup Ready\", \"Picked up\"])\n    }\n    console.log(pd)\n  }, [pd])\n\n  // const filters = [\"All orders\",\"Order received\", \"Preparing\", \"On the way\", \"Delivered\", \" Pickup Ready\", \"Picked up\"]\n\n   \n      // [\"Order Received\", \"Preparing\", \"On the way\", \"Delivered\"]\n      // [\"Order Received\", \"Preparing\", \" Pick up Ready\", \"Picked Up\"];\n\n  const handleChange = (event) => {\n    setStatus(event.target.value);\n  };\n\n  useEffect(() => {\n    if(status==\"All orders\"){\n      setFilteredOrders(orders)\n    }\n    else setFilteredOrders(orders.filter((order) => order.ostatus === status));\n  }, [status]);\n\n  useEffect(() => setFilteredOrders(orders), [orders])\n\n  const useModal = () => {\n    const [isShowing, setIsShowing] = useState(false);\n\n    function toggle() {\n      setIsShowing(!isShowing);\n    }\n\n    return {\n      isShowing,\n      toggle,\n    };\n  };\n\n  const Modal = ({ isShowing, hide , total}) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <div className=\"modal-overlay\" />\n            <div\n              className=\"modal-wrapper\"\n              aria-modal\n              aria-hidden\n              tabIndex={-1}\n              role=\"dialog\"\n            >\n              <div className=\"modal\">\n                <div className=\"modal-header\" style={{justifyContent: 'flex-end'}}>\n                  <button\n                    type=\"button\"\n                    className=\"modal-close-button\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={hide}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <Typography component=\"div\" variant=\"h5\"></Typography>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"text.secondary\"\n                  component=\"div\"\n                >\n                  <br />\n                  Order details\n                </Typography>\n                <Grid container spacing={3}>\n                  {orderdetails.map((dish) => (\n                      <Grid container item>\n                        <Grid container xs={4}>\n                          {dish.dname}\n                        </Grid>\n                        <Grid container xs={4}>\n                          {dish.quantity}\n                        </Grid>\n                        <Grid container xs={4}>\n                          {dish.subtotal}\n                        </Grid>\n                      </Grid>\n                    ))}\n                  <Grid container item>\n                    <Grid container xs={4}></Grid>\n                    {/* <Grid container xs={4}>\n                      Total Price :\n                    </Grid>\n                    <Grid container xs={4}>\n                    {total}\n                    </Grid> */}\n                  </Grid>\n                </Grid>\n                <Box\n                  sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}\n                >\n                </Box>\n              </div>\n            </div>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  const { isShowing, toggle } = useModal();\n\n  \n  function signout(){\n    dispatch(logout());\n    localStorage.setItem(\"customer\",null);\n    history.push(\"/\")\n  }\n\n\n  return (\n    <div >\n      <div className=\"header__upper\">\n        <div\n          className=\"header__upperheader\"\n          style={{ backgroundColor: headbg, boxShadow: shadow }}\n        >\n          <div className=\"header__upperheaderleft\">\n            <Link to=\"/chome\">\n              <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />{\" \"}\n            </Link>\n          </div>\n\n          <div className=\"header__upperheadercenter\"   >\n          <LocationOn />\n<input type=\"text\" placeholder=\"What are you craving? \" />\n</div>\n\n\n          <div className=\"header__upperheaderright\" onClick={signout}>\n            <p> Sign out </p>\n          </div>\n        </div>\n      </div>\n     \n      <div\n        style={{\n          paddingTop: \"100px\",\n          height: \"100vh\",\n          paddingLeft:'45px',\n          paddingRight:'45px'\n          \n        }}\n        container\n        direction={\"row\"}\n      >\n        <div style ={{\n                  paddingBottom: '30px',\n                }}>\n        <h1>Past Orders</h1>\n      </div>\n        <Box sx={{ minWidth: 120 }} style ={{\n                  color: \"black\",\n                  paddingBottom:'30px'\n                }}>\n        \n\n            <FormGroup style={{display:\"flex\"}}>\n                <FormControlLabel   value=\"pickup\"  onChange={\n                  (event) => updatePD(\n                    {...pd,\n                      pickup: event.target.checked\n                    }\n                  )\n                }control={<Checkbox  defaultChecked=\"true\" style ={{\n                  color: \"black\",\n                }}/>} label=\"Pick-up\"/>\n\n                <FormControlLabel  value=\"delivery\"   onChange={\n                  (event) => updatePD(\n                    {...pd,\n                      delivery: event.target.checked\n                    }\n                  )\n                }\n                   control={<Checkbox defaultChecked=\"true\" style ={{\n                  color: \"black\",\n                }} />} label=\"Delivery\" />\n           </FormGroup>\n          <FormControl fullWidth style ={{\n                  color: \"black\",\n                }}>\n            <InputLabel id=\"demo-simple-select-label\">Order status</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={status}\n              label=\"Status\"\n              onChange={handleChange}\n              style ={{\n                color: \"black\",\n              }}\n            >\n              {filters.map((filter) => (\n                <MenuItem value={filter}>{filter}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n        <table\n          style={{\n            width: \"100%\",\n            paddingTop:'30px'\n          }}\n        >\n          <tr>\n            <th>Restaurant Name</th>\n            <th>Order Date</th>\n            <th>Amount</th>\n            <th>Mode of delivery</th>\n          </tr> \n\n          {/* Use filterredOrders for this */}\n          {filteredOrders.map((order) => (\n            <tr onClick={()=>{toggle()\n            getdetails(order.invoiceId)}}>\n              <td>{order.rname}</td>\n              <td>{order.orderDate}</td>\n              <td>{order.total}</td>\n              <td>{order.mode}</td>\n              <Modal\n              isShowing={isShowing}\n              hide={toggle}\n              total= {order.total}\n              style={{ position: \"absolute\", width: \"240px\", height: \"340px\" }}\n            />\n            </tr>\n          ))}\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Pastorders;\n","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Home.js",["470","471"],"import React, { useEffect, useState } from \"react\";\n//import React, { useState, useEffect, useContext } from 'react'\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport M from \"materialize-css\";\nimport Button from \"@mui/material/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport Restaurant from \"../components/Restaurants\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Menu,\n  LocationOn,\n} from \"@mui/icons-material\";\nimport \"./Home.css\";\nimport ShoppingCartOutlinedIcon from \"@mui/icons-material/ShoppingCartOutlined\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\n\nconst Home = () => {\n  const history = useHistory();\n  const dispatch= useDispatch();\n  const [search, setsearch] = useState([]);\n  const [restaurants, setRestaurants] = useState([]);\n  const [filteredRestaurants, setFilteredRestaurants] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [headbg, setheadbg] = useState(\"transparent\");\n  const [shadow, setshadow] = useState(\"none\");\n \n\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  window.addEventListener(\"scroll\", () => {\n    if (window.scrollY >= 50) {\n      setheadbg(\"#FFFFFF\");\n      setshadow(\"rgb(226 226 226) 0px -2px 0px inset\");\n \n    } else {\n      setheadbg(\"transparent\");\n      setshadow(\"none\");\n\n    }\n  });\n\n  useEffect(() => setFilteredRestaurants(restaurants), [restaurants])\n\n  // const Item = styled(Paper)(({ theme }) => ({\n  //   ...theme.typography.body2,\n  //   padding: theme.spacing(2),\n  //   textAlign: 'center',\n  //   color: theme.palette.text.secondary,\n  // }));\n\n  function signout(){\n    dispatch(logout());\n    localStorage.setItem(\"customer\",null);\n    history.push(\"/\")\n  }\n\n  const useModal = () => {\n    const [isShowing, setIsShowing] = useState(false);\n\n    function toggle() {\n      setIsShowing(!isShowing);\n    }\n\n    return {\n      isShowing,\n      toggle,\n    };\n  };\n\n  const Modal = ({ isShowing, hide }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <div className=\"modal-overlay\" />\n            <div\n              className=\"modal-wrapper\"\n              aria-modal\n              aria-hidden\n              tabIndex={-1}\n              role=\"dialog\"\n            >\n              <div className=\"modal\">\n              <div style={{ display: \"flex\", alignItems: \"center\",fontSize:30}}> {JSON.parse(localStorage.getItem(\"cart\"))?JSON.parse(localStorage.getItem(\"cart\"))[0].rname: <p/>}</div>\n               \n                <div className=\"modal-header\" style={{justifyContent: 'flex-end'}}>\n                  <button\n                    type=\"button\"\n                    className=\"modal-close-button\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={hide}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <Typography component=\"div\" variant=\"h5\"></Typography>\n              \n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"text.secondary\"\n                  component=\"div\"\n                  style={{paddingBottom: '25px'}}\n                >\n                  <br />\n                  {localStorage.getItem(\"cart\")? \n                  <div >Cart Items\n                  <div style={{display :\"flex\", flexDirection:\"row\"}}> \n                  <div>Dish name  </div> <div style={{paddingLeft:\"85px\"}}>   Quantity </div><div style={{paddingLeft:\"110px\"}}>  Subtotal</div></div></div>\n                  :<p></p>}\n                \n                </Typography>\n                <Grid container spacing={3}>\n                  \n                  {localStorage.getItem(\"cart\")?localStorage.getItem(\"cart\") &&\n                    JSON.parse(localStorage.getItem(\"cart\")).map((dish) => (\n                      <Grid container item>\n                        <Grid container xs={4}>\n                          {dish.dname}\n                        </Grid>\n                        <Grid container xs={4}>\n                          {dish.quantity}\n                        </Grid>\n                        <Grid container xs={4}>\n                          ${dish.subtotal}\n                        </Grid>\n                      </Grid>\n                    )):<Typography\n                    variant=\"subtitle1\"\n                    color=\"text.secondary\"\n                    component=\"div\"\n                    style={{paddingBottom: '25px'}}\n                  > Cart is empty </Typography>}\n                  \n                </Grid>\n                <Box\n                  sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}\n                >\n                  \n\n                  {localStorage.getItem(\"cart\")? <Link to ='/checkout'style={{paddingTop: '40px'}}>\n                  \n                  <Button\n                    onClick={() => {\n                      toggle();\n                    }}\n                    style={{color:'white', backgroundColor:'black', display:'flex',}}\n                  >\n                    GO TO CHECKOUT . ${localStorage.getItem(\"order\") && JSON.parse(localStorage.getItem(\"order\")).total}\n                  </Button></Link> : <Button disabled\n                    onClick={() => {\n                      toggle();\n                    }}\n                    style={{color:'white', backgroundColor:'black', display:'flex',}}\n                  > ADD ITEMS\n                  </Button>}\n                </Box>\n              </div>\n            </div>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  const { isShowing, toggle } = useModal();\n\n  useEffect(() => {\n    getRestaurants();\n  }, []);\n\n  const getRestaurants = async () => {\n    const customerId = JSON.parse(localStorage.getItem(\"customer\")).customerId;\n    console.log(customerId);\n    await axios\n      .post(\n        `/customer/api/getRestarants/${customerId}`,\n        {}\n      )\n      //     .then((response) =>\n      //   {\n      //     return JSON.parse(response)\n      //   })\n      .then((responseData) => {\n        console.log(\"res\", responseData);\n        if (responseData.data.error) {\n          console.log(\"res\", responseData);\n          M.toast({\n            html: responseData.data.error,\n            classes: \"#c62828 red darken-3\",\n          });\n        } else {\n          //setcustomerData(responseData.data)\n          setRestaurants(responseData.data);\n          console.log(responseData.data);\n          //console.log(\"resss \",customerData);\n          // localStorage.setItem('restaurant', JSON.stringify(responseData.data));\n        }\n      });\n  };\n\n  function searchRestaurant(name) {\n    setsearch(true);\n    const Name = { name: name };\n    console.log(Name);\n    axios\n      .post(\"/customer/api/searchRestaurant\", Name)\n\n      .then((responseData) => {\n        console.log(\"res\", responseData);\n        if (responseData.data.error) {\n          console.log(\"res\", responseData);\n          M.toast({\n            html: responseData.data.error,\n            classes: \"#c62828 red darken-3\",\n          });\n        } else {\n          setRestaurants(responseData.data);\n          //setRestaurants(responseData.data)\n          console.log(responseData.data);\n          //console.log(\"resss \",customerData);\n          //localStorage.setItem('restaurant', JSON.stringify(responseData.data));\n        }\n      });\n  }\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    //e.preventDefault();\n    searchRestaurant(value);\n    // or you can send data to backend\n  };\n\n  const handleKeypress = (e) => {\n    //it triggers by pressing the enter key\n    if (e.key === \"Enter\") {\n      console.log(\"enter\");\n      handleSubmit();\n    }\n  };\n\n  const [filters, updateFilters] = useState({\n    delivery: true,\n    pickup: false,\n    vegan: true,\n    veg: true,\n    nonVeg: true\n  })\n\n  const deliveryOrPickup = (delivery, pickup, rname) => {\n    if (delivery === \"Yes\" && filters.delivery) {\n      return true\n    }\n    else if (pickup === \"Yes\" && filters.pickup) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  useEffect(() => {\n    setFilteredRestaurants(\n      restaurants\n      .filter((restaurent) => (deliveryOrPickup(restaurent.delivery, restaurent.pickup, restaurent.rname)))\n      .filter((restaurent) => (( filters.veg && restaurent.veg === \"Yes\" ) || ( filters.nonVeg && restaurent.nonVeg === \"Yes\" ) || ( filters.vegan && restaurent.vegan === \"Yes\" )))\n    )\n  }, [filters])\n\n  console.log(\"filtered\", filteredRestaurants)\n  console.log(\"all\", restaurants)\n\n\n  return (\n    <div className=\"cushome\">\n      <div className=\"header__upper\">\n        <div\n          className=\"header__upperheader\"\n          style={{ backgroundColor: headbg, boxShadow: shadow }}\n        >\n          <div className=\"header__upperheaderleft\">\n            <Menu\n              style={{\n                marginRight: \"30px\",\n              }}\n              onClick={handleDrawerOpen}\n            />\n            <a href=\"/chome\">\n              <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />\n            </a>\n          </div>\n\n          <div className=\"header__upperheadercenter\">\n            <LocationOn />\n            <input\n              type=\"text\"\n              placeholder=\"What are you craving? \"\n              value={value}\n              onChange={handleChange}\n              onKeyPress={handleKeypress}\n            />\n          </div>\n          <div className=\"header__upperheaderright\" onClick={toggle}>\n            <p>\n              {\" \"}\n              <ShoppingCartOutlinedIcon style={{ color: \"black\" }} />\n              <span className=\"empty-message\">\n                {\" \"}\n                {localStorage.getItem(\"cart\")\n                  ? JSON.parse(localStorage.getItem(\"cart\")).length\n                  : \"Your cart is empty\"}\n              </span>{\" \"}\n            </p>\n            <Modal\n              isShowing={isShowing}\n              hide={toggle}\n              style={{ position: \"absolute\", width: \"240px\", height: \"340px\" }}\n            />\n          </div>\n          <div className=\"header__upperheaderright\" onClick={signout}>\n            <p> Sign out </p>\n          </div>\n        </div>\n\n        <Drawer\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            \"& .MuiDrawer-paper\": {\n              width: drawerWidth,\n              boxSizing: \"border-box\",\n            },\n          }}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n        >\n          <DrawerHeader>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n            <img\n                src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/ee037401cb5d31b23cf780808ee4ec1f.svg \"\n                alt=\"uber eats\"\n              />\n          </DrawerHeader>\n          <Divider />\n          <List>\n          <ListItem >\n          \n                <ListItemIcon >\n                <Link to ='./cprofile' style={{color:'black',}}>\n                 <AccountBoxIcon /> </Link>  \n                </ListItemIcon> \n                <ListItemText> <Link to ='./cprofile' style={{textDecoration:'none', color:\"black\"}}>  View profile </Link></ListItemText>\n              </ListItem>\n        <ListItem >\n          \n                <ListItemIcon>\n                <Link to ='./cprofile' style={{color:'black',}}>\n                 <AssignmentIndIcon />   \n                 </Link>  \n                </ListItemIcon> \n                <ListItemText> <Link to ='./cprofile' style={{textDecoration:'none', color:\"black\"}}>  Update profile </Link></ListItemText>\n              </ListItem>\n              <ListItem >\n           \n                <ListItemIcon>\n                <Link to ='./favourite' style={{color:'black',}}> \n                 <FavoriteIcon />  </Link>\n                </ListItemIcon> \n                <ListItemText>  <Link to ='./favourite' style={{textDecoration:'none', color:\"black\"}}>  Favourites </Link></ListItemText>\n              </ListItem>\n              <ListItem >\n          \n                <ListItemIcon>\n                <Link to ='./pastorders' style={{color:'black',}}> \n                 <ReceiptIcon />  </Link> \n                </ListItemIcon> \n                <ListItemText>  <Link to ='./pastorders' style={{textDecoration:'none', color:\"black\"}}>   Orders</Link></ListItemText>\n              </ListItem>\n          </List>\n          <Divider />\n        </Drawer>\n      </div>\n      <div></div>\n      <Grid\n        container\n        style={{\n          paddingTop: \"120px\",\n          paddingLeft:'30px'\n        }}\n      >\n        <Grid container item xs={2} style={{\n          height: \"fit-content\",\n          paddingTop: '20px'\n        }}>\n          <Grid container item>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Choose delivery option</FormLabel>\n              <RadioGroup defaultValue=\"delivery\" name=\"radio-buttons-group\" >\n                <FormControlLabel\n                  value=\"delivery\"\n                  control={<Radio style ={{\n                    color: \"black\",\n                  }}/>}\n                  label=\"Delivery\"\n                  onChange={\n                    (event) => updateFilters(\n                      {...filters,\n                        delivery: event.target.checked,\n                        pickup: !event.target.checked,\n                      }\n                    )\n                  }\n                />\n                <FormControlLabel\n                  value=\"pickup\"\n                  control={<Radio style ={{\n                    color: \"black\",\n                  }}/>}\n                  label=\"Pickup\"\n                  onChange={\n                    (event) => updateFilters(\n                      {...filters,\n                        pickup: event.target.checked,\n                        delivery: !event.target.checked,\n                      }\n                    )\n                  }\n                />\n              </RadioGroup>\n            </FormControl>\n\n          </Grid>\n          <Grid container item style={{paddingTop: '50px'}}>\n\n            <FormGroup >\n              <FormLabel component=\"legend\">Diet preference</FormLabel>\n              <FormControlLabel\n                control={<Checkbox defaultChecked style ={{\n                  color: \"black\",\n                }}/>}\n                label=\"Vegan\"\n                onChange={\n                  (event) => updateFilters(\n                    {...filters,\n                      vegan: event.target.checked\n                    }\n                  )\n                }\n              />\n              <FormControlLabel\n                control={<Checkbox defaultChecked  style ={{\n                  color: \"black\",\n                }}\n                />}\n                label=\"Veg\"\n                onChange={\n                  (event) => updateFilters(\n                    {...filters,\n                      veg: event.target.checked\n                    }\n                  )\n                }\n              />\n              <FormControlLabel\n                control={<Checkbox defaultChecked style ={{\n                  color: \"black\",\n                }}/>}\n                label=\"Non-Veg\"\n                onChange={\n                  (event) => updateFilters(\n                    {...filters,\n                      nonVeg: event.target.checked\n                    }\n                  )\n                }\n              />\n            </FormGroup>\n          </Grid>\n        </Grid>\n        \n        {search ? (\n          <Grid container item xs={10} spacing={5} style={{paddingRight:'40px'}}>\n            {\n              filteredRestaurants.map((restaurant) => (\n                <Grid container item xs={4}>\n                  <Restaurant\n                    id={restaurant.restaurantId}\n                    Name={restaurant.rname}\n                    Opens_at={restaurant.fromTime}\n                    imageKey={restaurant.profilepic}\n                    desc= {restaurant.rdesc}\n                  />\n                </Grid>\n              ))\n            }\n          </Grid>\n        ) : (\n          <Grid container item xs={10} spacing={5} style={{paddingRight:'40px'}}>\n            {filteredRestaurants.map((restaurant) => (\n              <Grid container item xs={4}>\n                <Restaurant\n                  id={restaurant.restaurantId}\n                  Name={restaurant.rname}\n                  Opens_at={restaurant.fromTime}\n                  imageKey={restaurant.profilepic}\n                  desc= {restaurant.rdesc}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n\n//Sidebar\n\nconst drawerWidth = 240;\n\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\n  ({ theme, open }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  })\n);\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  padding: theme.spacing(0, 1),\n  // necessary for content to be below app bar\n  ...theme.mixins.toolbar,\n  justifyContent: \"flex-end\",\n}));\n","/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Home.js",["472","473","474","475","476","477","478"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Resprofile.js",["479","480","481","482","483"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/dish/Adddish.js",["484"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/dish/Editdish.js",["485","486","487","488","489","490","491"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/features/userReducer.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/features/restaurantReducer.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/CenterBox.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Showprofile.js",["492","493","494","495"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/customer/Profilepic.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Sidebar.js",["496"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/dish/Showprofile.js",["497","498","499"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Dishes.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/dish/Profilepic.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Restaurantpic.js",["500"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/actions/resActions.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/actions/userActions.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Resdishes.js",["501","502"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/components/Restaurants.js",["503","504","505"],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Profilepic.js",[],"/Users/gunjalgupta/Desktop/UberEats-clone/frontend/src/restaurant/Showprofile.js",["506","507","508","509","510"],{"ruleId":"511","replacedBy":"512"},{"ruleId":"513","replacedBy":"514"},{"ruleId":"515","severity":1,"message":"516","line":6,"column":10,"nodeType":"517","messageId":"518","endLine":6,"endColumn":20},{"ruleId":"519","severity":1,"message":"520","line":31,"column":33,"nodeType":"521","messageId":"522","endLine":31,"endColumn":35},{"ruleId":"523","severity":1,"message":"524","line":301,"column":6,"nodeType":"525","endLine":301,"endColumn":15,"suggestions":"526"},{"ruleId":"515","severity":1,"message":"527","line":566,"column":7,"nodeType":"517","messageId":"518","endLine":566,"endColumn":11},{"ruleId":"515","severity":1,"message":"528","line":23,"column":12,"nodeType":"517","messageId":"518","endLine":23,"endColumn":17},{"ruleId":"515","severity":1,"message":"529","line":23,"column":19,"nodeType":"517","messageId":"518","endLine":23,"endColumn":27},{"ruleId":"515","severity":1,"message":"530","line":24,"column":12,"nodeType":"517","messageId":"518","endLine":24,"endColumn":15},{"ruleId":"515","severity":1,"message":"531","line":24,"column":17,"nodeType":"517","messageId":"518","endLine":24,"endColumn":23},{"ruleId":"515","severity":1,"message":"532","line":25,"column":12,"nodeType":"517","messageId":"518","endLine":25,"endColumn":15},{"ruleId":"515","severity":1,"message":"533","line":28,"column":12,"nodeType":"517","messageId":"518","endLine":28,"endColumn":24},{"ruleId":"523","severity":1,"message":"534","line":83,"column":8,"nodeType":"525","endLine":83,"endColumn":10,"suggestions":"535"},{"ruleId":"536","severity":1,"message":"537","line":264,"column":24,"nodeType":"538","endLine":264,"endColumn":28},{"ruleId":"515","severity":1,"message":"539","line":33,"column":12,"nodeType":"517","messageId":"518","endLine":33,"endColumn":24},{"ruleId":"515","severity":1,"message":"540","line":33,"column":26,"nodeType":"517","messageId":"518","endLine":33,"endColumn":41},{"ruleId":"515","severity":1,"message":"528","line":36,"column":12,"nodeType":"517","messageId":"518","endLine":36,"endColumn":17},{"ruleId":"515","severity":1,"message":"529","line":36,"column":19,"nodeType":"517","messageId":"518","endLine":36,"endColumn":27},{"ruleId":"541","severity":1,"message":"542","line":260,"column":38,"nodeType":"538","endLine":269,"endColumn":81},{"ruleId":"536","severity":1,"message":"537","line":293,"column":12,"nodeType":"538","endLine":293,"endColumn":16},{"ruleId":"515","severity":1,"message":"527","line":302,"column":7,"nodeType":"517","messageId":"518","endLine":302,"endColumn":11},{"ruleId":"519","severity":1,"message":"520","line":28,"column":29,"nodeType":"521","messageId":"522","endLine":28,"endColumn":31},{"ruleId":"511","replacedBy":"543"},{"ruleId":"513","replacedBy":"544"},{"ruleId":"515","severity":1,"message":"545","line":17,"column":12,"nodeType":"517","messageId":"518","endLine":17,"endColumn":23},{"ruleId":"515","severity":1,"message":"546","line":17,"column":25,"nodeType":"517","messageId":"518","endLine":17,"endColumn":39},{"ruleId":"515","severity":1,"message":"528","line":18,"column":12,"nodeType":"517","messageId":"518","endLine":18,"endColumn":17},{"ruleId":"515","severity":1,"message":"529","line":18,"column":19,"nodeType":"517","messageId":"518","endLine":18,"endColumn":27},{"ruleId":"515","severity":1,"message":"533","line":21,"column":10,"nodeType":"517","messageId":"518","endLine":21,"endColumn":22},{"ruleId":"523","severity":1,"message":"547","line":58,"column":6,"nodeType":"525","endLine":58,"endColumn":8,"suggestions":"548"},{"ruleId":"536","severity":1,"message":"537","line":247,"column":8,"nodeType":"538","endLine":247,"endColumn":12},{"ruleId":"515","severity":1,"message":"528","line":23,"column":12,"nodeType":"517","messageId":"518","endLine":23,"endColumn":17},{"ruleId":"515","severity":1,"message":"529","line":23,"column":19,"nodeType":"517","messageId":"518","endLine":23,"endColumn":27},{"ruleId":"515","severity":1,"message":"530","line":24,"column":12,"nodeType":"517","messageId":"518","endLine":24,"endColumn":15},{"ruleId":"515","severity":1,"message":"531","line":24,"column":17,"nodeType":"517","messageId":"518","endLine":24,"endColumn":23},{"ruleId":"515","severity":1,"message":"533","line":27,"column":12,"nodeType":"517","messageId":"518","endLine":27,"endColumn":24},{"ruleId":"523","severity":1,"message":"549","line":74,"column":7,"nodeType":"525","endLine":74,"endColumn":9,"suggestions":"550"},{"ruleId":"536","severity":1,"message":"537","line":288,"column":16,"nodeType":"538","endLine":288,"endColumn":20},{"ruleId":"515","severity":1,"message":"551","line":31,"column":10,"nodeType":"517","messageId":"518","endLine":31,"endColumn":14},{"ruleId":"515","severity":1,"message":"552","line":31,"column":16,"nodeType":"517","messageId":"518","endLine":31,"endColumn":23},{"ruleId":"515","severity":1,"message":"533","line":34,"column":10,"nodeType":"517","messageId":"518","endLine":34,"endColumn":22},{"ruleId":"523","severity":1,"message":"553","line":182,"column":6,"nodeType":"525","endLine":182,"endColumn":8,"suggestions":"554"},{"ruleId":"536","severity":1,"message":"537","line":306,"column":5,"nodeType":"538","endLine":306,"endColumn":9},{"ruleId":"515","severity":1,"message":"533","line":21,"column":10,"nodeType":"517","messageId":"518","endLine":21,"endColumn":22},{"ruleId":"515","severity":1,"message":"555","line":7,"column":11,"nodeType":"517","messageId":"518","endLine":7,"endColumn":15},{"ruleId":"515","severity":1,"message":"556","line":9,"column":12,"nodeType":"517","messageId":"518","endLine":9,"endColumn":18},{"ruleId":"515","severity":1,"message":"557","line":9,"column":20,"nodeType":"517","messageId":"518","endLine":9,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":28,"column":25,"nodeType":"538","endLine":28,"endColumn":86},{"ruleId":"515","severity":1,"message":"558","line":2,"column":10,"nodeType":"517","messageId":"518","endLine":2,"endColumn":21},{"ruleId":"515","severity":1,"message":"555","line":7,"column":11,"nodeType":"517","messageId":"518","endLine":7,"endColumn":15},{"ruleId":"515","severity":1,"message":"556","line":9,"column":12,"nodeType":"517","messageId":"518","endLine":9,"endColumn":18},{"ruleId":"515","severity":1,"message":"557","line":9,"column":20,"nodeType":"517","messageId":"518","endLine":9,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":28,"column":25,"nodeType":"538","endLine":28,"endColumn":86},{"ruleId":"515","severity":1,"message":"556","line":7,"column":12,"nodeType":"517","messageId":"518","endLine":7,"endColumn":18},{"ruleId":"515","severity":1,"message":"557","line":7,"column":20,"nodeType":"517","messageId":"518","endLine":7,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":27,"column":25,"nodeType":"538","endLine":27,"endColumn":86},{"ruleId":"515","severity":1,"message":"559","line":40,"column":7,"nodeType":"517","messageId":"518","endLine":40,"endColumn":13},{"ruleId":"515","severity":1,"message":"560","line":18,"column":10,"nodeType":"517","messageId":"518","endLine":18,"endColumn":24},{"ruleId":"515","severity":1,"message":"546","line":18,"column":26,"nodeType":"517","messageId":"518","endLine":18,"endColumn":40},{"ruleId":"523","severity":1,"message":"561","line":81,"column":6,"nodeType":"525","endLine":81,"endColumn":8,"suggestions":"562"},{"ruleId":"541","severity":1,"message":"542","line":11,"column":24,"nodeType":"538","endLine":18,"endColumn":67},{"ruleId":"515","severity":1,"message":"563","line":15,"column":10,"nodeType":"517","messageId":"518","endLine":15,"endColumn":16},{"ruleId":"515","severity":1,"message":"564","line":15,"column":18,"nodeType":"517","messageId":"518","endLine":15,"endColumn":27},{"ruleId":"565","severity":1,"message":"566","line":113,"column":33,"nodeType":"567","messageId":"568","endLine":113,"endColumn":35},{"ruleId":"515","severity":1,"message":"569","line":142,"column":15,"nodeType":"517","messageId":"518","endLine":142,"endColumn":22},{"ruleId":"515","severity":1,"message":"570","line":29,"column":10,"nodeType":"517","messageId":"518","endLine":29,"endColumn":14},{"ruleId":"515","severity":1,"message":"571","line":29,"column":16,"nodeType":"517","messageId":"518","endLine":29,"endColumn":23},{"ruleId":"523","severity":1,"message":"572","line":103,"column":6,"nodeType":"525","endLine":103,"endColumn":10,"suggestions":"573"},{"ruleId":"519","severity":1,"message":"520","line":116,"column":14,"nodeType":"521","messageId":"522","endLine":116,"endColumn":16},{"ruleId":"523","severity":1,"message":"574","line":120,"column":6,"nodeType":"525","endLine":120,"endColumn":14,"suggestions":"575"},{"ruleId":"519","severity":1,"message":"520","line":98,"column":24,"nodeType":"521","messageId":"522","endLine":98,"endColumn":26},{"ruleId":"519","severity":1,"message":"520","line":99,"column":31,"nodeType":"521","messageId":"522","endLine":99,"endColumn":33},{"ruleId":"519","severity":1,"message":"520","line":99,"column":64,"nodeType":"521","messageId":"522","endLine":99,"endColumn":66},{"ruleId":"519","severity":1,"message":"520","line":99,"column":92,"nodeType":"521","messageId":"522","endLine":99,"endColumn":94},{"ruleId":"519","severity":1,"message":"520","line":103,"column":36,"nodeType":"521","messageId":"522","endLine":103,"endColumn":38},{"ruleId":"519","severity":1,"message":"520","line":106,"column":36,"nodeType":"521","messageId":"522","endLine":106,"endColumn":38},{"ruleId":"519","severity":1,"message":"520","line":114,"column":31,"nodeType":"521","messageId":"522","endLine":114,"endColumn":33},{"ruleId":"519","severity":1,"message":"520","line":114,"column":64,"nodeType":"521","messageId":"522","endLine":114,"endColumn":66},{"ruleId":"519","severity":1,"message":"520","line":114,"column":92,"nodeType":"521","messageId":"522","endLine":114,"endColumn":94},{"ruleId":"519","severity":1,"message":"520","line":119,"column":36,"nodeType":"521","messageId":"522","endLine":119,"endColumn":38},{"ruleId":"519","severity":1,"message":"520","line":122,"column":36,"nodeType":"521","messageId":"522","endLine":122,"endColumn":38},{"ruleId":"515","severity":1,"message":"576","line":142,"column":12,"nodeType":"517","messageId":"518","endLine":142,"endColumn":19},{"ruleId":"515","severity":1,"message":"577","line":142,"column":21,"nodeType":"517","messageId":"518","endLine":142,"endColumn":31},{"ruleId":"523","severity":1,"message":"578","line":53,"column":8,"nodeType":"525","endLine":53,"endColumn":10,"suggestions":"579"},{"ruleId":"541","severity":1,"message":"542","line":93,"column":36,"nodeType":"538","endLine":102,"endColumn":79},{"ruleId":"511","replacedBy":"580"},{"ruleId":"513","replacedBy":"581"},{"ruleId":"515","severity":1,"message":"516","line":6,"column":10,"nodeType":"517","messageId":"518","endLine":6,"endColumn":20},{"ruleId":"519","severity":1,"message":"520","line":31,"column":27,"nodeType":"521","messageId":"522","endLine":31,"endColumn":29},{"ruleId":"515","severity":1,"message":"528","line":23,"column":12,"nodeType":"517","messageId":"518","endLine":23,"endColumn":17},{"ruleId":"515","severity":1,"message":"529","line":23,"column":19,"nodeType":"517","messageId":"518","endLine":23,"endColumn":27},{"ruleId":"515","severity":1,"message":"530","line":24,"column":12,"nodeType":"517","messageId":"518","endLine":24,"endColumn":15},{"ruleId":"515","severity":1,"message":"531","line":24,"column":17,"nodeType":"517","messageId":"518","endLine":24,"endColumn":23},{"ruleId":"515","severity":1,"message":"532","line":25,"column":12,"nodeType":"517","messageId":"518","endLine":25,"endColumn":15},{"ruleId":"515","severity":1,"message":"533","line":28,"column":12,"nodeType":"517","messageId":"518","endLine":28,"endColumn":24},{"ruleId":"523","severity":1,"message":"534","line":83,"column":8,"nodeType":"525","endLine":83,"endColumn":10,"suggestions":"582"},{"ruleId":"536","severity":1,"message":"537","line":264,"column":24,"nodeType":"538","endLine":264,"endColumn":28},{"ruleId":"519","severity":1,"message":"520","line":29,"column":23,"nodeType":"521","messageId":"522","endLine":29,"endColumn":25},{"ruleId":"519","severity":1,"message":"520","line":98,"column":24,"nodeType":"521","messageId":"522","endLine":98,"endColumn":26},{"ruleId":"519","severity":1,"message":"520","line":99,"column":31,"nodeType":"521","messageId":"522","endLine":99,"endColumn":33},{"ruleId":"519","severity":1,"message":"520","line":99,"column":64,"nodeType":"521","messageId":"522","endLine":99,"endColumn":66},{"ruleId":"519","severity":1,"message":"520","line":99,"column":92,"nodeType":"521","messageId":"522","endLine":99,"endColumn":94},{"ruleId":"519","severity":1,"message":"520","line":103,"column":36,"nodeType":"521","messageId":"522","endLine":103,"endColumn":38},{"ruleId":"519","severity":1,"message":"520","line":106,"column":36,"nodeType":"521","messageId":"522","endLine":106,"endColumn":38},{"ruleId":"519","severity":1,"message":"520","line":114,"column":31,"nodeType":"521","messageId":"522","endLine":114,"endColumn":33},{"ruleId":"519","severity":1,"message":"520","line":114,"column":64,"nodeType":"521","messageId":"522","endLine":114,"endColumn":66},{"ruleId":"519","severity":1,"message":"520","line":114,"column":92,"nodeType":"521","messageId":"522","endLine":114,"endColumn":94},{"ruleId":"519","severity":1,"message":"520","line":119,"column":36,"nodeType":"521","messageId":"522","endLine":119,"endColumn":38},{"ruleId":"519","severity":1,"message":"520","line":122,"column":36,"nodeType":"521","messageId":"522","endLine":122,"endColumn":38},{"ruleId":"515","severity":1,"message":"576","line":142,"column":12,"nodeType":"517","messageId":"518","endLine":142,"endColumn":19},{"ruleId":"515","severity":1,"message":"577","line":142,"column":21,"nodeType":"517","messageId":"518","endLine":142,"endColumn":31},{"ruleId":"515","severity":1,"message":"528","line":23,"column":12,"nodeType":"517","messageId":"518","endLine":23,"endColumn":17},{"ruleId":"515","severity":1,"message":"529","line":23,"column":19,"nodeType":"517","messageId":"518","endLine":23,"endColumn":27},{"ruleId":"515","severity":1,"message":"530","line":24,"column":12,"nodeType":"517","messageId":"518","endLine":24,"endColumn":15},{"ruleId":"515","severity":1,"message":"531","line":24,"column":17,"nodeType":"517","messageId":"518","endLine":24,"endColumn":23},{"ruleId":"515","severity":1,"message":"533","line":27,"column":12,"nodeType":"517","messageId":"518","endLine":27,"endColumn":24},{"ruleId":"523","severity":1,"message":"549","line":74,"column":7,"nodeType":"525","endLine":74,"endColumn":9,"suggestions":"583"},{"ruleId":"536","severity":1,"message":"537","line":288,"column":16,"nodeType":"538","endLine":288,"endColumn":20},{"ruleId":"523","severity":1,"message":"578","line":53,"column":8,"nodeType":"525","endLine":53,"endColumn":10,"suggestions":"584"},{"ruleId":"541","severity":1,"message":"542","line":93,"column":36,"nodeType":"538","endLine":102,"endColumn":79},{"ruleId":"565","severity":1,"message":"566","line":113,"column":33,"nodeType":"567","messageId":"568","endLine":113,"endColumn":35},{"ruleId":"515","severity":1,"message":"569","line":142,"column":15,"nodeType":"517","messageId":"518","endLine":142,"endColumn":22},{"ruleId":"515","severity":1,"message":"570","line":29,"column":10,"nodeType":"517","messageId":"518","endLine":29,"endColumn":14},{"ruleId":"515","severity":1,"message":"571","line":29,"column":16,"nodeType":"517","messageId":"518","endLine":29,"endColumn":23},{"ruleId":"523","severity":1,"message":"572","line":103,"column":6,"nodeType":"525","endLine":103,"endColumn":10,"suggestions":"585"},{"ruleId":"519","severity":1,"message":"520","line":116,"column":14,"nodeType":"521","messageId":"522","endLine":116,"endColumn":16},{"ruleId":"523","severity":1,"message":"574","line":120,"column":6,"nodeType":"525","endLine":120,"endColumn":14,"suggestions":"586"},{"ruleId":"523","severity":1,"message":"524","line":302,"column":6,"nodeType":"525","endLine":302,"endColumn":15,"suggestions":"587"},{"ruleId":"515","severity":1,"message":"527","line":567,"column":7,"nodeType":"517","messageId":"518","endLine":567,"endColumn":11},{"ruleId":"515","severity":1,"message":"539","line":33,"column":12,"nodeType":"517","messageId":"518","endLine":33,"endColumn":24},{"ruleId":"515","severity":1,"message":"540","line":33,"column":26,"nodeType":"517","messageId":"518","endLine":33,"endColumn":41},{"ruleId":"515","severity":1,"message":"528","line":36,"column":12,"nodeType":"517","messageId":"518","endLine":36,"endColumn":17},{"ruleId":"515","severity":1,"message":"529","line":36,"column":19,"nodeType":"517","messageId":"518","endLine":36,"endColumn":27},{"ruleId":"541","severity":1,"message":"542","line":260,"column":38,"nodeType":"538","endLine":269,"endColumn":81},{"ruleId":"536","severity":1,"message":"537","line":293,"column":12,"nodeType":"538","endLine":293,"endColumn":16},{"ruleId":"515","severity":1,"message":"527","line":302,"column":7,"nodeType":"517","messageId":"518","endLine":302,"endColumn":11},{"ruleId":"515","severity":1,"message":"551","line":31,"column":10,"nodeType":"517","messageId":"518","endLine":31,"endColumn":14},{"ruleId":"515","severity":1,"message":"552","line":31,"column":16,"nodeType":"517","messageId":"518","endLine":31,"endColumn":23},{"ruleId":"515","severity":1,"message":"533","line":34,"column":10,"nodeType":"517","messageId":"518","endLine":34,"endColumn":22},{"ruleId":"523","severity":1,"message":"553","line":182,"column":6,"nodeType":"525","endLine":182,"endColumn":8,"suggestions":"588"},{"ruleId":"536","severity":1,"message":"537","line":306,"column":5,"nodeType":"538","endLine":306,"endColumn":9},{"ruleId":"515","severity":1,"message":"533","line":21,"column":10,"nodeType":"517","messageId":"518","endLine":21,"endColumn":22},{"ruleId":"515","severity":1,"message":"545","line":17,"column":12,"nodeType":"517","messageId":"518","endLine":17,"endColumn":23},{"ruleId":"515","severity":1,"message":"546","line":17,"column":25,"nodeType":"517","messageId":"518","endLine":17,"endColumn":39},{"ruleId":"515","severity":1,"message":"528","line":18,"column":12,"nodeType":"517","messageId":"518","endLine":18,"endColumn":17},{"ruleId":"515","severity":1,"message":"529","line":18,"column":19,"nodeType":"517","messageId":"518","endLine":18,"endColumn":27},{"ruleId":"515","severity":1,"message":"533","line":21,"column":10,"nodeType":"517","messageId":"518","endLine":21,"endColumn":22},{"ruleId":"523","severity":1,"message":"547","line":58,"column":6,"nodeType":"525","endLine":58,"endColumn":8,"suggestions":"589"},{"ruleId":"536","severity":1,"message":"537","line":247,"column":8,"nodeType":"538","endLine":247,"endColumn":12},{"ruleId":"515","severity":1,"message":"555","line":7,"column":11,"nodeType":"517","messageId":"518","endLine":7,"endColumn":15},{"ruleId":"515","severity":1,"message":"556","line":9,"column":12,"nodeType":"517","messageId":"518","endLine":9,"endColumn":18},{"ruleId":"515","severity":1,"message":"557","line":9,"column":20,"nodeType":"517","messageId":"518","endLine":9,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":28,"column":25,"nodeType":"538","endLine":28,"endColumn":86},{"ruleId":"515","severity":1,"message":"559","line":40,"column":7,"nodeType":"517","messageId":"518","endLine":40,"endColumn":13},{"ruleId":"515","severity":1,"message":"556","line":7,"column":12,"nodeType":"517","messageId":"518","endLine":7,"endColumn":18},{"ruleId":"515","severity":1,"message":"557","line":7,"column":20,"nodeType":"517","messageId":"518","endLine":7,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":27,"column":25,"nodeType":"538","endLine":27,"endColumn":86},{"ruleId":"541","severity":1,"message":"542","line":11,"column":24,"nodeType":"538","endLine":18,"endColumn":67},{"ruleId":"515","severity":1,"message":"563","line":15,"column":10,"nodeType":"517","messageId":"518","endLine":15,"endColumn":16},{"ruleId":"515","severity":1,"message":"564","line":15,"column":18,"nodeType":"517","messageId":"518","endLine":15,"endColumn":27},{"ruleId":"515","severity":1,"message":"560","line":18,"column":10,"nodeType":"517","messageId":"518","endLine":18,"endColumn":24},{"ruleId":"515","severity":1,"message":"546","line":18,"column":26,"nodeType":"517","messageId":"518","endLine":18,"endColumn":40},{"ruleId":"523","severity":1,"message":"561","line":82,"column":6,"nodeType":"525","endLine":82,"endColumn":8,"suggestions":"590"},{"ruleId":"515","severity":1,"message":"558","line":2,"column":10,"nodeType":"517","messageId":"518","endLine":2,"endColumn":21},{"ruleId":"515","severity":1,"message":"555","line":7,"column":11,"nodeType":"517","messageId":"518","endLine":7,"endColumn":15},{"ruleId":"515","severity":1,"message":"556","line":9,"column":12,"nodeType":"517","messageId":"518","endLine":9,"endColumn":18},{"ruleId":"515","severity":1,"message":"557","line":9,"column":20,"nodeType":"517","messageId":"518","endLine":9,"endColumn":29},{"ruleId":"541","severity":1,"message":"542","line":28,"column":25,"nodeType":"538","endLine":28,"endColumn":86},"no-native-reassign",["591"],"no-negated-in-lhs",["592"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deliveryOrPickup' and 'restaurants'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredRestaurants' needs the current value of 'restaurants'.","ArrayExpression",["593"],"'Main' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'dob' is assigned a value but never used.","'inputdisplay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'customerData.DOB'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDob' needs the current value of 'customerData.DOB'.",["594"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'customerData' is assigned a value but never used.","'setcustomerData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["591"],["592"],"'restaurants' is assigned a value but never used.","'setRestaurants' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dishId'. Either include it or remove the dependency array.",["595"],"React Hook useEffect has a missing dependency: 'restaurantData'. Either include it or remove the dependency array.",["596"],"'cart' is assigned a value but never used.","'setCart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getDishes', 'getRestaurant', and 'restaurantId'. Either include them or remove the dependency array.",["597"],"'user' is assigned a value but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'useDispatch' is defined but never used.","'AppBar' is assigned a value but never used.","'favrestaurants' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["598"],"'dishes' is assigned a value but never used.","'setDishes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'timeout' is assigned a value but never used.","'mode' is assigned a value but never used.","'setMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filters'. Either include it or remove the dependency array.",["599"],"React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredOrders' needs the current value of 'orders'.",["600"],"'columns' is assigned a value but never used.","'setColumns' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'customerId'. Either include it or remove the dependency array.",["601"],["591"],["592"],["602"],["603"],["604"],["605"],["606"],["607"],["608"],["609"],["610"],"no-global-assign","no-unsafe-negation",{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"613","fix":"629"},{"desc":"617","fix":"630"},{"desc":"627","fix":"631"},{"desc":"623","fix":"632"},{"desc":"625","fix":"633"},{"desc":"611","fix":"634"},{"desc":"619","fix":"635"},{"desc":"615","fix":"636"},{"desc":"621","fix":"637"},"Update the dependencies array to be: [deliveryOrPickup, filters, restaurants]",{"range":"638","text":"639"},"Update the dependencies array to be: [customerData.DOB]",{"range":"640","text":"641"},"Update the dependencies array to be: [dishId]",{"range":"642","text":"643"},"Update the dependencies array to be: [restaurantData]",{"range":"644","text":"645"},"Update the dependencies array to be: [getDishes, getRestaurant, restaurantId]",{"range":"646","text":"647"},"Update the dependencies array to be: [id]",{"range":"648","text":"649"},"Update the dependencies array to be: [filters, pd]",{"range":"650","text":"651"},"Update the dependencies array to be: [orders, status]",{"range":"652","text":"653"},"Update the dependencies array to be: [customerId]",{"range":"654","text":"655"},{"range":"656","text":"641"},{"range":"657","text":"645"},{"range":"658","text":"655"},{"range":"659","text":"651"},{"range":"660","text":"653"},{"range":"661","text":"639"},{"range":"662","text":"647"},{"range":"663","text":"643"},{"range":"664","text":"649"},[9944,9953],"[deliveryOrPickup, filters, restaurants]",[2710,2712],"[customerData.DOB]",[1689,1691],"[dishId]",[2423,2425],"[restaurantData]",[6302,6304],"[getDishes, getRestaurant, restaurantId]",[2679,2681],"[id]",[2987,2991],"[filters, pd]",[3514,3522],"[orders, status]",[1463,1465],"[customerId]",[2702,2704],[2423,2425],[1463,1465],[2987,2991],[3514,3522],[9959,9968],[6302,6304],[1689,1691],[2721,2723]]