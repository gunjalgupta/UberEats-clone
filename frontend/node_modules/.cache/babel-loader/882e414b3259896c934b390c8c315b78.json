{"ast":null,"code":"var _jsxFileName = \"/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Dishes.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { Card, Grid } from \"@mui/material\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dishes({\n  dname,\n  des,\n  ing,\n  imageKey,\n  price,\n  id,\n  restaurantId,\n  rname\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [dish, setdish] = useState([]);\n  let [counter, setcounter] = useState(0);\n\n  const increment = () => {\n    setcounter(counter + 1);\n  };\n\n  const decrement = () => {\n    setcounter(counter - 1);\n  };\n\n  const useModal = () => {\n    _s();\n\n    const [isShowing, setIsShowing] = useState(false);\n\n    function toggle() {\n      setIsShowing(!isShowing);\n    }\n\n    return {\n      isShowing,\n      toggle\n    };\n  };\n\n  _s(useModal, \"7Bsg1H9HhKZ1D+ABB/zg+EQIyL0=\");\n\n  const addToCart = (dishId, quantity, dname, price) => {\n    console.log(\"here\", dishId);\n    const subtotal = quantity * price;\n\n    if (localStorage.getItem('order')) {\n      console.log(\"in order\", restaurantId, JSON.parse(localStorage.getItem('order')).restaurantId);\n\n      if (JSON.stringify(JSON.parse(localStorage.getItem('order')).restaurantId) === restaurantId) {\n        console.log(\"in cart\", restaurantId, JSON.parse(localStorage.getItem('order')).restaurantId);\n        localStorage.getItem(\"cart\") ? localStorage.setItem(\"cart\", JSON.stringify([...JSON.parse(localStorage.getItem(\"cart\")), {\n          dishId: dishId,\n          dname: dname,\n          quantity: quantity,\n          Price: price,\n          subtotal: subtotal,\n          rname: rname\n        }])) : localStorage.setItem(\"cart\", JSON.stringify([{\n          dishId: dishId,\n          dname: dname,\n          quantity: quantity,\n          Price: price,\n          subtotal: subtotal,\n          rname: rname\n        }]));\n      } else {\n        //   if((localStorage.getItem('cart'))) {\n        //   localStorage.setItem(\n        //     \"cart\",\n        //     JSON.stringify([\n        //       ...JSON.parse(localStorage.getItem(\"cart\")),\n        //       { dishId: dishId, dname:dname, quantity: quantity, Price: price, subtotal: subtotal, rname:rname },\n        //     ])\n        //   )\n        // }\n        // else {\n        localStorage.setItem(\"cart\", JSON.stringify([{\n          dishId: dishId,\n          dname: dname,\n          quantity: quantity,\n          Price: price,\n          subtotal: subtotal,\n          rname: rname\n        }])); //}\n      }\n    }\n  };\n\n  const Modal = ({\n    isShowing,\n    hide\n  }) => isShowing ? /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-wrapper\",\n      \"aria-modal\": true,\n      \"aria-hidden\": true,\n      tabIndex: -1,\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            fontSize: 30\n          },\n          children: [\" \", rname, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          style: {\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"modal-close-button\",\n            \"data-dismiss\": \"modal\",\n            \"aria-label\": \"Close\",\n            onClick: hide,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"div\",\n          variant: \"h5\",\n          children: dish.dname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: \"text.secondary\",\n          component: \"div\",\n          children: [dish.des, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this), \"Ingredients: \", dish.ing]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\",\n            pl: 1,\n            pb: 1\n          },\n          children: [\"Price $\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), imageKey && /*#__PURE__*/_jsxDEV(CardMedia, {\n          className: \"media\",\n          component: \"img\",\n          sx: {\n            width: 151\n          },\n          image: `http://localhost:8081/images/${imageKey}`,\n          alt: \"Live from space album cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          size: \"small\",\n          \"aria-label\": \"small button group\",\n          children: [counter > 1 ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              decrement();\n            },\n            children: \"-\"\n          }, \"one\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            disabled: true,\n            onClick: () => {\n              decrement();\n            },\n            children: \"-\"\n          }, \"one\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), \",\", /*#__PURE__*/_jsxDEV(Button, {\n            diabled: true,\n            children: counter\n          }, \"two\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this), \",\", /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              increment();\n            },\n            children: \"+\"\n          }, \"three\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this), \",\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: 30\n          },\n          onClick: () => JSON.stringify(JSON.parse(localStorage.getItem('order')).restaurantId) === restaurantId ? (console.log(\"fisrt\"), addToCart(id, counter, dname, price)) : (console.log(\"second\", JSON.parse(localStorage.getItem('order')).restaurantId, restaurantId), hide //addToCart(id, counter,dname,price)\n          ) //: <Modal isShowing={isShowing} hide={toggle} />\n          // addToCart(id, counter,dname,price) \n          ,\n          disabled: counter === 0,\n          children: [\" \", \"Add to cart\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 11\n  }, this), document.body) : null;\n\n  const {\n    isShowing,\n    toggle\n  } = useModal();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dishcard\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isShowing: isShowing,\n      hide: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      class: true,\n      Name: \"root\",\n      style: {\n        border: \"1px solid grey\",\n        cursor: \"pointer\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        onClick: () => {\n          toggle();\n          setdish({\n            dname,\n            des,\n            ing,\n            imageKey,\n            price\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 6,\n          style: {\n            padding: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              variant: \"h5\",\n              children: dname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              color: \"text.secondary\",\n              component: \"div\",\n              children: [des, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), \"Ingredients: \", ing]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            children: [\"Price $\", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 6,\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          children: imageKey && /*#__PURE__*/_jsxDEV(CardMedia, {\n            className: \"media\",\n            component: \"img\",\n            sx: {\n              width: 151\n            },\n            image: `http://localhost:8081/images/${imageKey}`,\n            alt: \"Live from space album cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Dishes, \"gH5XyYrdICcjEDyRYF3jjU5HInc=\", false, function () {\n  return [useModal];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["/Users/gunjalgupta/Desktop/ubereatss/frontend/src/components/Dishes.js"],"names":["React","Box","Card","Grid","CardContent","CardMedia","Typography","useState","Button","ButtonGroup","ReactDOM","Dishes","dname","des","ing","imageKey","price","id","restaurantId","rname","dish","setdish","counter","setcounter","increment","decrement","useModal","isShowing","setIsShowing","toggle","addToCart","dishId","quantity","console","log","subtotal","localStorage","getItem","JSON","parse","stringify","setItem","Price","Modal","hide","createPortal","display","alignItems","fontSize","justifyContent","pl","pb","width","marginLeft","document","body","border","cursor","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { Card, Grid } from \"@mui/material\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport ReactDOM from \"react-dom\";\n\nfunction Dishes({ dname, des, ing, imageKey, price, id , restaurantId,rname}) {\n  const [dish, setdish] = useState([]);\n  let [counter, setcounter] = useState(0);\n\n  const increment = () => {\n    setcounter(counter + 1);\n  };\n  const decrement = () => {\n    setcounter(counter - 1);\n  };\n  const useModal = () => {\n    const [isShowing, setIsShowing] = useState(false);\n\n    function toggle() {\n      setIsShowing(!isShowing);\n    }\n\n    return {\n      isShowing,\n      toggle,\n    };\n  };\n\n  const addToCart = (dishId, quantity,dname,price) => {\n    console.log(\"here\",dishId)\n    const subtotal= quantity*price\n    if (localStorage.getItem('order')) {\n      console.log(\"in order\",restaurantId, JSON.parse(localStorage.getItem('order')).restaurantId)\n      if (JSON.stringify(JSON.parse(localStorage.getItem('order')).restaurantId )=== restaurantId) {\n        console.log(\"in cart\",restaurantId, JSON.parse(localStorage.getItem('order')).restaurantId)\n        localStorage.getItem(\"cart\") ? \n        localStorage.setItem(\n          \"cart\",\n          JSON.stringify([\n            ...JSON.parse(localStorage.getItem(\"cart\")),\n            { dishId: dishId, dname:dname, quantity: quantity, Price: price, subtotal: subtotal,rname:rname  },\n          ])\n        ) : \n        localStorage.setItem(\n          \"cart\",\n          JSON.stringify([\n            { dishId: dishId, dname:dname, quantity: quantity, Price: price, subtotal: subtotal,rname:rname },\n          ])\n        )\n      } else \n      {\n      //   if((localStorage.getItem('cart'))) {\n      //   localStorage.setItem(\n      //     \"cart\",\n      //     JSON.stringify([\n      //       ...JSON.parse(localStorage.getItem(\"cart\")),\n      //       { dishId: dishId, dname:dname, quantity: quantity, Price: price, subtotal: subtotal, rname:rname },\n      //     ])\n      //   )\n      // }\n      // else {\n        localStorage.setItem(\n          \"cart\",\n          JSON.stringify([\n            { dishId: dishId, dname:dname, quantity: quantity, Price: price, subtotal: subtotal ,rname:rname},\n          ])\n        )\n      //}\n    }}\n    \n  };\n\n  const Modal = ({ isShowing, hide }) =>\n    isShowing\n      ? ReactDOM.createPortal(\n          <React.Fragment>\n            <div className=\"modal-overlay\" />\n            <div\n              className=\"modal-wrapper\"\n              aria-modal\n              aria-hidden\n              tabIndex={-1}\n              role=\"dialog\"\n            >\n              <div className=\"modal\">\n              <div style={{ display: \"flex\", alignItems: \"center\",fontSize:30}}> {rname} </div>\n                <div className=\"modal-header\" style={{justifyContent: 'flex-end'}}>\n                  \n                  <button\n                    type=\"button\"\n                    className=\"modal-close-button\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={hide}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <Typography component=\"div\" variant=\"h5\">\n                  {dish.dname}\n                </Typography>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"text.secondary\"\n                  component=\"div\"\n                >\n                  {dish.des}\n                  <br />\n                  Ingredients: {dish.ing}\n                </Typography>\n                <Box\n                  sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}\n                >\n                  Price ${price}\n                </Box>\n\n                {imageKey && (\n                  <CardMedia\n                    className=\"media\"\n                    component=\"img\"\n                    sx={{ width: 151 }}\n                    image={`http://localhost:8081/images/${imageKey}`}\n                    alt=\"Live from space album cover\"\n                  />\n                )}\n                <ButtonGroup size=\"small\" aria-label=\"small button group\">\n                  {counter > 1 ? (\n                    <Button\n                      key=\"one\"\n                      onClick={() => {\n                        decrement();\n                      }}\n                    >\n                      -\n                    </Button>\n                  ) : (\n                    <Button\n                      disabled\n                      key=\"one\"\n                      onClick={() => {\n                        decrement();\n                      }}\n                    >\n                      -\n                    </Button>\n                  )}\n                  ,\n                  <Button key=\"two\" diabled>\n                    {counter}\n                  </Button>\n                  ,\n                  <Button\n                    key=\"three\"\n                    onClick={() => {\n                      increment();\n                    }}\n                  >\n                    +\n                  </Button>\n                  ,\n                </ButtonGroup>\n                <Button\n                  style={{ marginLeft: 30 }}\n                  onClick={() => \n                    (JSON.stringify(JSON.parse(localStorage.getItem('order')).restaurantId) === restaurantId)?(\n                      console.log(\"fisrt\")\n                      ,addToCart(id, counter,dname,price)\n      )\n                    :(\n                      \n                      console.log(\"second\", JSON.parse(localStorage.getItem('order')).restaurantId, restaurantId),\n                      hide\n                      //addToCart(id, counter,dname,price)\n                    )\n                    //: <Modal isShowing={isShowing} hide={toggle} />\n                    // addToCart(id, counter,dname,price) \n                  }\n                  disabled={counter===0}\n                >\n                  {\" \"}\n                  Add to cart\n                </Button>\n              </div>\n            </div>\n          </React.Fragment>,\n          document.body\n        )\n      : null;\n  const { isShowing, toggle } = useModal();\n\n\n  return (\n    <div className=\"dishcard\">\n      <Modal isShowing={isShowing} hide={toggle} />\n      <Card\n        class\n        Name=\"root\"\n        style={{\n          border: \"1px solid grey\",\n          cursor: \"pointer\",\n        }}\n      >\n        <Grid\n          container\n          direction={\"row\"}\n          onClick={() => {\n            toggle();\n            setdish({ dname, des, ing, imageKey, price });\n          }}\n        >\n          <Grid\n            container\n            item\n            xs={6}\n            style={{\n              padding: \"20px\",\n            }}\n          >\n            <Grid container item>\n              <Typography component=\"div\" variant=\"h5\">\n                {dname}\n              </Typography>\n            </Grid>\n            <Grid container item>\n              <Typography\n                variant=\"subtitle1\"\n                color=\"text.secondary\"\n                component=\"div\"\n              >\n                {des}\n                <br />\n                Ingredients: {ing}\n              </Typography>\n            </Grid>\n            <Grid container item>\n              Price ${price}\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            xs={6}\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            {imageKey && (\n              <CardMedia\n                className=\"media\"\n                component=\"img\"\n                sx={{ width: 151 }}\n                image={`http://localhost:8081/images/${imageKey}`}\n                alt=\"Live from space album cover\"\n              />\n            )}\n          </Grid>\n        </Grid>\n        {/* <Box sx={{ maxWidth: 345, minWidth: 345 }}>\n          <CardContent\n            sx={{ flex: \"1 0 auto\" }}\n            onClick={() => {\n              toggle();\n              setdish({ dname, des, ing, imageKey, price });\n            }}\n          >\n            <Typography component=\"div\" variant=\"h5\">\n              {dname}\n            </Typography>\n            <Typography\n              variant=\"subtitle1\"\n              color=\"text.secondary\"\n              component=\"div\"\n            >\n              {des}\n              <br />\n              Ingredients: {ing}\n            </Typography>\n          </CardContent>\n          <Box sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}>\n            Price ${price}\n          </Box>\n        </Box>\n        {imageKey && (\n          <CardMedia\n            className=\"media\"\n            component=\"img\"\n            sx={{ width: 151 }}\n            image={`http://localhost:8081/images/${imageKey}`}\n            alt=\"Live from space album cover\"\n          />\n        )} */}\n      </Card>\n    </div>\n  );\n}\n\nexport default Dishes;\n"]},"metadata":{},"sourceType":"module"}